
AtmegatoArduino.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000ef4  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00800060  00000f68  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000048  00800060  00800060  00000f68  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00000f68  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000fc4  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000040  00000000  00000000  00001000  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000b7d  00000000  00000000  00001040  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 0000070f  00000000  00000000  00001bbd  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000004bc  00000000  00000000  000022cc  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000000bc  00000000  00000000  00002788  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000003b3  00000000  00000000  00002844  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000005f8  00000000  00000000  00002bf7  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000048  00000000  00000000  000031ef  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 48 00 	jmp	0x90	; 0x90 <__ctors_end>
   4:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__bad_interrupt>
   8:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__vector_2>
   c:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__bad_interrupt>
  10:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__bad_interrupt>
  14:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__bad_interrupt>
  18:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__bad_interrupt>
  1c:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__bad_interrupt>
  20:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__bad_interrupt>
  24:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__bad_interrupt>
  28:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__bad_interrupt>
  2c:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__bad_interrupt>
  30:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__bad_interrupt>
  34:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__bad_interrupt>
  38:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__bad_interrupt>
  3c:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__bad_interrupt>
  40:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__bad_interrupt>
  44:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__bad_interrupt>
  48:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__bad_interrupt>
  4c:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__bad_interrupt>
  50:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__bad_interrupt>

00000054 <__trampolines_end>:
  54:	4e 41       	sbci	r20, 0x1E	; 30
  56:	4e 49       	Address 0x00000056 is out of bounds.
.word	0xffff	; ????

00000057 <pstr_inity>:
  57:	49 4e 49 54 59                                      INITY

0000005c <pstr_inf>:
  5c:	49 4e 46                                            INF

0000005f <pwr_m10>:
  5f:	cd cc cc 3d 0a d7 23 3c 17 b7 d1 38 77 cc 2b 32     ...=..#<...8w.+2
  6f:	95 95 e6 24 1f b1 4f 0a                             ...$..O.

00000077 <pwr_p10>:
  77:	00 00 20 41 00 00 c8 42 00 40 1c 46 20 bc be 4c     .. A...B.@.F ..L
  87:	ca 1b 0e 5a ae c5 9d 74 00                          ...Z...t.

00000090 <__ctors_end>:
  90:	11 24       	eor	r1, r1
  92:	1f be       	out	0x3f, r1	; 63
  94:	cf e5       	ldi	r28, 0x5F	; 95
  96:	d8 e0       	ldi	r29, 0x08	; 8
  98:	de bf       	out	0x3e, r29	; 62
  9a:	cd bf       	out	0x3d, r28	; 61

0000009c <__do_clear_bss>:
  9c:	20 e0       	ldi	r18, 0x00	; 0
  9e:	a0 e6       	ldi	r26, 0x60	; 96
  a0:	b0 e0       	ldi	r27, 0x00	; 0
  a2:	01 c0       	rjmp	.+2      	; 0xa6 <.do_clear_bss_start>

000000a4 <.do_clear_bss_loop>:
  a4:	1d 92       	st	X+, r1

000000a6 <.do_clear_bss_start>:
  a6:	a8 3a       	cpi	r26, 0xA8	; 168
  a8:	b2 07       	cpc	r27, r18
  aa:	e1 f7       	brne	.-8      	; 0xa4 <.do_clear_bss_loop>
  ac:	0e 94 b0 00 	call	0x160	; 0x160 <main>
  b0:	0c 94 78 07 	jmp	0xef0	; 0xef0 <_exit>

000000b4 <__bad_interrupt>:
  b4:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000b8 <comparator>:

int comparator(const void *p, const void *q)
{
	float l = ((struct buzzer *)p)->timeStamp;
	float r = ((struct buzzer *)q)->timeStamp;
	return l - r;
  b8:	fb 01       	movw	r30, r22
  ba:	22 81       	ldd	r18, Z+2	; 0x02
  bc:	33 81       	ldd	r19, Z+3	; 0x03
  be:	44 81       	ldd	r20, Z+4	; 0x04
  c0:	55 81       	ldd	r21, Z+5	; 0x05
  c2:	fc 01       	movw	r30, r24
  c4:	62 81       	ldd	r22, Z+2	; 0x02
  c6:	73 81       	ldd	r23, Z+3	; 0x03
  c8:	84 81       	ldd	r24, Z+4	; 0x04
  ca:	95 81       	ldd	r25, Z+5	; 0x05
  cc:	0e 94 f1 01 	call	0x3e2	; 0x3e2 <__subsf3>
  d0:	0e 94 5e 02 	call	0x4bc	; 0x4bc <__fixsfsi>
}
  d4:	cb 01       	movw	r24, r22
  d6:	08 95       	ret

000000d8 <sendChar>:

void sendChar(char c){
	while (! (UCSRA & (1 << UDRE)) );
  d8:	5d 9b       	sbis	0x0b, 5	; 11
  da:	fe cf       	rjmp	.-4      	; 0xd8 <sendChar>
	
	UDR = c;//once transmitter is ready sent eight bit data
  dc:	8c b9       	out	0x0c, r24	; 12
  de:	08 95       	ret

000000e0 <receiveChar>:
}

char receiveChar(){
	while ( (UCSRA & (1 << RXC)) == 0x00 );
  e0:	5f 9b       	sbis	0x0b, 7	; 11
  e2:	fe cf       	rjmp	.-4      	; 0xe0 <receiveChar>
	
	return UDR ;
  e4:	8c b1       	in	r24, 0x0c	; 12
}
  e6:	08 95       	ret

000000e8 <__vector_2>:

ISR(INT1_vect)
{
  e8:	1f 92       	push	r1
  ea:	0f 92       	push	r0
  ec:	0f b6       	in	r0, 0x3f	; 63
  ee:	0f 92       	push	r0
  f0:	11 24       	eor	r1, r1
  f2:	2f 93       	push	r18
  f4:	3f 93       	push	r19
  f6:	4f 93       	push	r20
  f8:	5f 93       	push	r21
  fa:	6f 93       	push	r22
  fc:	7f 93       	push	r23
  fe:	8f 93       	push	r24
 100:	9f 93       	push	r25
 102:	af 93       	push	r26
 104:	bf 93       	push	r27
 106:	ef 93       	push	r30
 108:	ff 93       	push	r31
	PORTA = 7;
 10a:	87 e0       	ldi	r24, 0x07	; 7
 10c:	8b bb       	out	0x1b, r24	; 27
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 10e:	87 ea       	ldi	r24, 0xA7	; 167
 110:	91 e6       	ldi	r25, 0x61	; 97
 112:	01 97       	sbiw	r24, 0x01	; 1
 114:	f1 f7       	brne	.-4      	; 0x112 <__vector_2+0x2a>
 116:	00 c0       	rjmp	.+0      	; 0x118 <__vector_2+0x30>
 118:	00 00       	nop
	_delay_ms(100);
	PORTA = 0;
 11a:	1b ba       	out	0x1b, r1	; 27
 11c:	87 ea       	ldi	r24, 0xA7	; 167
 11e:	91 e6       	ldi	r25, 0x61	; 97
 120:	01 97       	sbiw	r24, 0x01	; 1
 122:	f1 f7       	brne	.-4      	; 0x120 <__vector_2+0x38>
 124:	00 c0       	rjmp	.+0      	; 0x126 <__vector_2+0x3e>
 126:	00 00       	nop
	_delay_ms(100);
	sendChar('b');
 128:	82 e6       	ldi	r24, 0x62	; 98
 12a:	0e 94 6c 00 	call	0xd8	; 0xd8 <sendChar>
	breakloop = 1;
 12e:	81 e0       	ldi	r24, 0x01	; 1
 130:	90 e0       	ldi	r25, 0x00	; 0
 132:	90 93 63 00 	sts	0x0063, r25	; 0x800063 <breakloop+0x1>
 136:	80 93 62 00 	sts	0x0062, r24	; 0x800062 <breakloop>
	GIFR = 0xFF;
 13a:	8f ef       	ldi	r24, 0xFF	; 255
 13c:	8a bf       	out	0x3a, r24	; 58
}
 13e:	ff 91       	pop	r31
 140:	ef 91       	pop	r30
 142:	bf 91       	pop	r27
 144:	af 91       	pop	r26
 146:	9f 91       	pop	r25
 148:	8f 91       	pop	r24
 14a:	7f 91       	pop	r23
 14c:	6f 91       	pop	r22
 14e:	5f 91       	pop	r21
 150:	4f 91       	pop	r20
 152:	3f 91       	pop	r19
 154:	2f 91       	pop	r18
 156:	0f 90       	pop	r0
 158:	0f be       	out	0x3f, r0	; 63
 15a:	0f 90       	pop	r0
 15c:	1f 90       	pop	r1
 15e:	18 95       	reti

00000160 <main>:

int main(void)

{
 160:	cf 93       	push	r28
 162:	df 93       	push	r29
 164:	cd b7       	in	r28, 0x3d	; 61
 166:	de b7       	in	r29, 0x3e	; 62
 168:	64 97       	sbiw	r28, 0x14	; 20
 16a:	0f b6       	in	r0, 0x3f	; 63
 16c:	f8 94       	cli
 16e:	de bf       	out	0x3e, r29	; 62
 170:	0f be       	out	0x3f, r0	; 63
 172:	cd bf       	out	0x3d, r28	; 61
	//DDRB = 0xFF;
	DDRA &= ~(1 << PINA0);//pin0 of portD as INPUT
 174:	d0 98       	cbi	0x1a, 0	; 26
	DDRA |= (1 << PINA1) | (1 << PINA2) | (1 << PINA3) | (1 << PINA7);
 176:	8a b3       	in	r24, 0x1a	; 26
 178:	8e 68       	ori	r24, 0x8E	; 142
 17a:	8a bb       	out	0x1a, r24	; 26
	int UBBRValue = 12;//AS described before setting baud rate 9600BPS, double transmission
	UBRRH = (unsigned char) (UBBRValue >> 8);
 17c:	10 bc       	out	0x20, r1	; 32
	UBRRL = (unsigned char) UBBRValue;
 17e:	8c e0       	ldi	r24, 0x0C	; 12
 180:	89 b9       	out	0x09, r24	; 9
	UCSRA = 0;
 182:	1b b8       	out	0x0b, r1	; 11
	UCSRB = (1 << RXEN) | (1 << TXEN);    //Enable the receiver and transmitter
 184:	88 e1       	ldi	r24, 0x18	; 24
 186:	8a b9       	out	0x0a, r24	; 10
	UCSRC = 0b10000110;
 188:	86 e8       	ldi	r24, 0x86	; 134
 18a:	80 bd       	out	0x20, r24	; 32
	char k;
	int buttonPressed = 0;
	
	MCUCR = MCUCR & 0b11110011;
 18c:	85 b7       	in	r24, 0x35	; 53
 18e:	83 7f       	andi	r24, 0xF3	; 243
 190:	85 bf       	out	0x35, r24	; 53
	MCUCR = MCUCR | 0b00001000;
 192:	85 b7       	in	r24, 0x35	; 53
 194:	88 60       	ori	r24, 0x08	; 8
 196:	85 bf       	out	0x35, r24	; 53
	GICR = (1<<INT1);
 198:	80 e8       	ldi	r24, 0x80	; 128
 19a:	8b bf       	out	0x3b, r24	; 59
	sei();
 19c:	78 94       	sei
			
		}
		
		if(buttonPressed == 1)
		{
			PORTA=2;
 19e:	68 94       	set
 1a0:	cc 24       	eor	r12, r12
 1a2:	c1 f8       	bld	r12, 1
				_delay_ms(700);
				
				if(k < 'a' || k > 'z') { text[strIndex] = k;} 
				
				if(text[strIndex] == '$'){
					PORTA=4;
 1a4:	68 94       	set
 1a6:	ff 24       	eor	r15, r15
 1a8:	f2 f8       	bld	r15, 2
					_delay_ms(200);
					PORTA=0;
					text[strIndex + 1] = '\0';
 1aa:	04 e6       	ldi	r16, 0x64	; 100
 1ac:	10 e0       	ldi	r17, 0x00	; 0
					
					
					buzzers[buzzerIndex].id = text[0]-48;
					char ff[20];
					uint8_t i = 2;
					for( ;  text[i] != '$' ; i++){
 1ae:	68 94       	set
 1b0:	dd 24       	eor	r13, r13
 1b2:	d1 f8       	bld	r13, 1
 1b4:	e1 2c       	mov	r14, r1
	while (1)

	{
		//sendChar('s');
		k='0';
		if(PINA & (1 << DDA0))
 1b6:	c8 9b       	sbis	0x19, 0	; 25
 1b8:	ae c0       	rjmp	.+348    	; 0x316 <main+0x1b6>
			
		}
		
		if(buttonPressed == 1)
		{
			PORTA=2;
 1ba:	cb ba       	out	0x1b, r12	; 27
 1bc:	8f e4       	ldi	r24, 0x4F	; 79
 1be:	93 ec       	ldi	r25, 0xC3	; 195
 1c0:	01 97       	sbiw	r24, 0x01	; 1
 1c2:	f1 f7       	brne	.-4      	; 0x1c0 <main+0x60>
 1c4:	00 c0       	rjmp	.+0      	; 0x1c6 <main+0x66>
 1c6:	00 00       	nop
			_delay_ms(200);
			PORTA=0;
 1c8:	1b ba       	out	0x1b, r1	; 27
			sendChar('s');
 1ca:	83 e7       	ldi	r24, 0x73	; 115
 1cc:	0e 94 6c 00 	call	0xd8	; 0xd8 <sendChar>
 1d0:	a3 ec       	ldi	r26, 0xC3	; 195
 1d2:	b9 e0       	ldi	r27, 0x09	; 9
 1d4:	11 97       	sbiw	r26, 0x01	; 1
 1d6:	f1 f7       	brne	.-4      	; 0x1d4 <main+0x74>
 1d8:	00 c0       	rjmp	.+0      	; 0x1da <main+0x7a>
 1da:	00 00       	nop
			
			_delay_ms(10);
			
			while(1)
			{
				k=receiveChar();
 1dc:	0e 94 70 00 	call	0xe0	; 0xe0 <receiveChar>
 1e0:	bf ed       	ldi	r27, 0xDF	; 223
 1e2:	e2 e2       	ldi	r30, 0x22	; 34
 1e4:	f2 e0       	ldi	r31, 0x02	; 2
 1e6:	b1 50       	subi	r27, 0x01	; 1
 1e8:	e0 40       	sbci	r30, 0x00	; 0
 1ea:	f0 40       	sbci	r31, 0x00	; 0
 1ec:	e1 f7       	brne	.-8      	; 0x1e6 <main+0x86>
 1ee:	00 c0       	rjmp	.+0      	; 0x1f0 <main+0x90>
 1f0:	00 00       	nop
				
				_delay_ms(700);
				
				if(k < 'a' || k > 'z') { text[strIndex] = k;} 
 1f2:	9f e9       	ldi	r25, 0x9F	; 159
 1f4:	98 0f       	add	r25, r24
 1f6:	9a 31       	cpi	r25, 0x1A	; 26
 1f8:	30 f0       	brcs	.+12     	; 0x206 <main+0xa6>
 1fa:	e0 91 61 00 	lds	r30, 0x0061	; 0x800061 <strIndex>
 1fe:	f0 e0       	ldi	r31, 0x00	; 0
 200:	ec 59       	subi	r30, 0x9C	; 156
 202:	ff 4f       	sbci	r31, 0xFF	; 255
 204:	80 83       	st	Z, r24
				
				if(text[strIndex] == '$'){
 206:	80 91 61 00 	lds	r24, 0x0061	; 0x800061 <strIndex>
 20a:	e8 2f       	mov	r30, r24
 20c:	f0 e0       	ldi	r31, 0x00	; 0
 20e:	ec 59       	subi	r30, 0x9C	; 156
 210:	ff 4f       	sbci	r31, 0xFF	; 255
 212:	90 81       	ld	r25, Z
 214:	94 32       	cpi	r25, 0x24	; 36
 216:	09 f0       	breq	.+2      	; 0x21a <main+0xba>
 218:	70 c0       	rjmp	.+224    	; 0x2fa <main+0x19a>
					PORTA=4;
 21a:	fb ba       	out	0x1b, r15	; 27
 21c:	8f e4       	ldi	r24, 0x4F	; 79
 21e:	93 ec       	ldi	r25, 0xC3	; 195
 220:	01 97       	sbiw	r24, 0x01	; 1
 222:	f1 f7       	brne	.-4      	; 0x220 <main+0xc0>
 224:	00 c0       	rjmp	.+0      	; 0x226 <main+0xc6>
 226:	00 00       	nop
					_delay_ms(200);
					PORTA=0;
 228:	1b ba       	out	0x1b, r1	; 27
					text[strIndex + 1] = '\0';
 22a:	e0 91 61 00 	lds	r30, 0x0061	; 0x800061 <strIndex>
 22e:	f0 e0       	ldi	r31, 0x00	; 0
 230:	ec 59       	subi	r30, 0x9C	; 156
 232:	ff 4f       	sbci	r31, 0xFF	; 255
 234:	11 82       	std	Z+1, r1	; 0x01
					
					
					buzzers[buzzerIndex].id = text[0]-48;
 236:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <_edata>
 23a:	90 e0       	ldi	r25, 0x00	; 0
 23c:	fc 01       	movw	r30, r24
 23e:	ee 0f       	add	r30, r30
 240:	ff 1f       	adc	r31, r31
 242:	e8 0f       	add	r30, r24
 244:	f9 1f       	adc	r31, r25
 246:	ee 0f       	add	r30, r30
 248:	ff 1f       	adc	r31, r31
 24a:	ee 57       	subi	r30, 0x7E	; 126
 24c:	ff 4f       	sbci	r31, 0xFF	; 255
 24e:	d8 01       	movw	r26, r16
 250:	8c 91       	ld	r24, X
 252:	90 e0       	ldi	r25, 0x00	; 0
 254:	c0 97       	sbiw	r24, 0x30	; 48
 256:	91 83       	std	Z+1, r25	; 0x01
 258:	80 83       	st	Z, r24
					char ff[20];
					uint8_t i = 2;
					for( ;  text[i] != '$' ; i++){
 25a:	12 96       	adiw	r26, 0x02	; 2
 25c:	2c 91       	ld	r18, X
 25e:	24 32       	cpi	r18, 0x24	; 36
 260:	a1 f0       	breq	.+40     	; 0x28a <main+0x12a>
 262:	8d 2d       	mov	r24, r13
 264:	9e 2d       	mov	r25, r14
 266:	32 e0       	ldi	r19, 0x02	; 2
						ff[i - 2] = text[i];
 268:	ef ef       	ldi	r30, 0xFF	; 255
 26a:	ff ef       	ldi	r31, 0xFF	; 255
 26c:	ec 0f       	add	r30, r28
 26e:	fd 1f       	adc	r31, r29
 270:	e8 0f       	add	r30, r24
 272:	f9 1f       	adc	r31, r25
 274:	20 83       	st	Z, r18
					
					
					buzzers[buzzerIndex].id = text[0]-48;
					char ff[20];
					uint8_t i = 2;
					for( ;  text[i] != '$' ; i++){
 276:	3f 5f       	subi	r19, 0xFF	; 255
 278:	83 2f       	mov	r24, r19
 27a:	90 e0       	ldi	r25, 0x00	; 0
 27c:	fc 01       	movw	r30, r24
 27e:	ec 59       	subi	r30, 0x9C	; 156
 280:	ff 4f       	sbci	r31, 0xFF	; 255
 282:	20 81       	ld	r18, Z
 284:	24 32       	cpi	r18, 0x24	; 36
 286:	81 f7       	brne	.-32     	; 0x268 <main+0x108>
 288:	02 c0       	rjmp	.+4      	; 0x28e <main+0x12e>
 28a:	8d 2d       	mov	r24, r13
 28c:	9e 2d       	mov	r25, r14
						ff[i - 2] = text[i];
					}
					ff[i - 2] = '\0';
 28e:	ef ef       	ldi	r30, 0xFF	; 255
 290:	ff ef       	ldi	r31, 0xFF	; 255
 292:	ec 0f       	add	r30, r28
 294:	fd 1f       	adc	r31, r29
 296:	e8 0f       	add	r30, r24
 298:	f9 1f       	adc	r31, r25
 29a:	10 82       	st	Z, r1
					float tt = atof(ff);
 29c:	ce 01       	movw	r24, r28
 29e:	01 96       	adiw	r24, 0x01	; 1
 2a0:	0e 94 ca 04 	call	0x994	; 0x994 <atof>
					buzzers[buzzerIndex].timeStamp = tt;
 2a4:	20 91 60 00 	lds	r18, 0x0060	; 0x800060 <_edata>
 2a8:	42 2f       	mov	r20, r18
 2aa:	50 e0       	ldi	r21, 0x00	; 0
 2ac:	fa 01       	movw	r30, r20
 2ae:	ee 0f       	add	r30, r30
 2b0:	ff 1f       	adc	r31, r31
 2b2:	e4 0f       	add	r30, r20
 2b4:	f5 1f       	adc	r31, r21
 2b6:	ee 0f       	add	r30, r30
 2b8:	ff 1f       	adc	r31, r31
 2ba:	ee 57       	subi	r30, 0x7E	; 126
 2bc:	ff 4f       	sbci	r31, 0xFF	; 255
 2be:	62 83       	std	Z+2, r22	; 0x02
 2c0:	73 83       	std	Z+3, r23	; 0x03
 2c2:	84 83       	std	Z+4, r24	; 0x04
 2c4:	95 83       	std	Z+5, r25	; 0x05
					buzzerIndex++;
 2c6:	2f 5f       	subi	r18, 0xFF	; 255
 2c8:	20 93 60 00 	sts	0x0060, r18	; 0x800060 <_edata>
					
					
					for(int q = 0 ; ff[q] != '\0' ; q++){
 2cc:	89 81       	ldd	r24, Y+1	; 0x01
 2ce:	88 23       	and	r24, r24
 2d0:	79 f0       	breq	.+30     	; 0x2f0 <main+0x190>
 2d2:	5e 01       	movw	r10, r28
 2d4:	b2 e0       	ldi	r27, 0x02	; 2
 2d6:	ab 0e       	add	r10, r27
 2d8:	b1 1c       	adc	r11, r1
						sendChar(ff[q]);
 2da:	0e 94 6c 00 	call	0xd8	; 0xd8 <sendChar>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 2de:	e3 e0       	ldi	r30, 0x03	; 3
 2e0:	ea 95       	dec	r30
 2e2:	f1 f7       	brne	.-4      	; 0x2e0 <main+0x180>
 2e4:	00 00       	nop
					float tt = atof(ff);
					buzzers[buzzerIndex].timeStamp = tt;
					buzzerIndex++;
					
					
					for(int q = 0 ; ff[q] != '\0' ; q++){
 2e6:	d5 01       	movw	r26, r10
 2e8:	8d 91       	ld	r24, X+
 2ea:	5d 01       	movw	r10, r26
 2ec:	81 11       	cpse	r24, r1
 2ee:	f5 cf       	rjmp	.-22     	; 0x2da <main+0x17a>
					}
					
					
					
					
					strIndex = 0;
 2f0:	10 92 61 00 	sts	0x0061, r1	; 0x800061 <strIndex>
					text[0] = '\0';
 2f4:	f8 01       	movw	r30, r16
 2f6:	10 82       	st	Z, r1
 2f8:	03 c0       	rjmp	.+6      	; 0x300 <main+0x1a0>
					
				} else strIndex++;
 2fa:	8f 5f       	subi	r24, 0xFF	; 255
 2fc:	80 93 61 00 	sts	0x0061, r24	; 0x800061 <strIndex>
				}
				*/
				
				
				
				if(breakloop == 1)
 300:	80 91 62 00 	lds	r24, 0x0062	; 0x800062 <breakloop>
 304:	90 91 63 00 	lds	r25, 0x0063	; 0x800063 <breakloop+0x1>
 308:	01 97       	sbiw	r24, 0x01	; 1
 30a:	09 f0       	breq	.+2      	; 0x30e <main+0x1ae>
 30c:	67 cf       	rjmp	.-306    	; 0x1dc <main+0x7c>
				{
					breakloop = 0;
 30e:	10 92 63 00 	sts	0x0063, r1	; 0x800063 <breakloop+0x1>
 312:	10 92 62 00 	sts	0x0062, r1	; 0x800062 <breakloop>
			}
			buttonPressed = 0;
		}
		
		int size = sizeof(buzzers) / sizeof(buzzers[0]);
		qsort((void*)buzzers, size, sizeof(buzzers[0]), comparator);
 316:	2c e5       	ldi	r18, 0x5C	; 92
 318:	30 e0       	ldi	r19, 0x00	; 0
 31a:	46 e0       	ldi	r20, 0x06	; 6
 31c:	50 e0       	ldi	r21, 0x00	; 0
 31e:	66 e0       	ldi	r22, 0x06	; 6
 320:	70 e0       	ldi	r23, 0x00	; 0
 322:	82 e8       	ldi	r24, 0x82	; 130
 324:	90 e0       	ldi	r25, 0x00	; 0
 326:	0e 94 26 03 	call	0x64c	; 0x64c <qsort>
		
		if(buzzerIndex > 0)
 32a:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <_edata>
 32e:	88 23       	and	r24, r24
 330:	09 f4       	brne	.+2      	; 0x334 <main+0x1d4>
 332:	4d c0       	rjmp	.+154    	; 0x3ce <main+0x26e>
		{
			int lc=0;
			while(lc < buzzerIndex)
 334:	09 f4       	brne	.+2      	; 0x338 <main+0x1d8>
 336:	49 c0       	rjmp	.+146    	; 0x3ca <main+0x26a>
 338:	0f 2e       	mov	r0, r31
 33a:	f2 e8       	ldi	r31, 0x82	; 130
 33c:	8f 2e       	mov	r8, r31
 33e:	f0 e0       	ldi	r31, 0x00	; 0
 340:	9f 2e       	mov	r9, r31
 342:	f0 2d       	mov	r31, r0
 344:	a1 2c       	mov	r10, r1
 346:	b1 2c       	mov	r11, r1
			{
				PORTA = 4;
 348:	fb ba       	out	0x1b, r15	; 27
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 34a:	ff e1       	ldi	r31, 0x1F	; 31
 34c:	2f eb       	ldi	r18, 0xBF	; 191
 34e:	32 e0       	ldi	r19, 0x02	; 2
 350:	f1 50       	subi	r31, 0x01	; 1
 352:	20 40       	sbci	r18, 0x00	; 0
 354:	30 40       	sbci	r19, 0x00	; 0
 356:	e1 f7       	brne	.-8      	; 0x350 <main+0x1f0>
 358:	00 c0       	rjmp	.+0      	; 0x35a <main+0x1fa>
 35a:	00 00       	nop
				_delay_ms(900);
				if(buzzers[lc].id==1)
 35c:	d4 01       	movw	r26, r8
 35e:	8d 91       	ld	r24, X+
 360:	9c 91       	ld	r25, X
 362:	81 30       	cpi	r24, 0x01	; 1
 364:	91 05       	cpc	r25, r1
 366:	59 f4       	brne	.+22     	; 0x37e <main+0x21e>
				{
					PORTA = 2;
 368:	cb ba       	out	0x1b, r12	; 27
 36a:	bf e1       	ldi	r27, 0x1F	; 31
 36c:	ef eb       	ldi	r30, 0xBF	; 191
 36e:	f2 e0       	ldi	r31, 0x02	; 2
 370:	b1 50       	subi	r27, 0x01	; 1
 372:	e0 40       	sbci	r30, 0x00	; 0
 374:	f0 40       	sbci	r31, 0x00	; 0
 376:	e1 f7       	brne	.-8      	; 0x370 <main+0x210>
 378:	00 c0       	rjmp	.+0      	; 0x37a <main+0x21a>
 37a:	00 00       	nop
 37c:	0f c0       	rjmp	.+30     	; 0x39c <main+0x23c>
					_delay_ms(900);
				}
				else if(buzzers[lc].id==2)
 37e:	02 97       	sbiw	r24, 0x02	; 2
 380:	69 f4       	brne	.+26     	; 0x39c <main+0x23c>
				{
					PORTA = 4;
 382:	fb ba       	out	0x1b, r15	; 27
 384:	2f e1       	ldi	r18, 0x1F	; 31
 386:	3f eb       	ldi	r19, 0xBF	; 191
 388:	82 e0       	ldi	r24, 0x02	; 2
 38a:	21 50       	subi	r18, 0x01	; 1
 38c:	30 40       	sbci	r19, 0x00	; 0
 38e:	80 40       	sbci	r24, 0x00	; 0
 390:	e1 f7       	brne	.-8      	; 0x38a <main+0x22a>
 392:	00 c0       	rjmp	.+0      	; 0x394 <main+0x234>
 394:	00 00       	nop
					_delay_ms(900);
					sendChar('2');
 396:	82 e3       	ldi	r24, 0x32	; 50
 398:	0e 94 6c 00 	call	0xd8	; 0xd8 <sendChar>
				}
				PORTA = 0x00;
 39c:	1b ba       	out	0x1b, r1	; 27
 39e:	9f e1       	ldi	r25, 0x1F	; 31
 3a0:	af eb       	ldi	r26, 0xBF	; 191
 3a2:	b2 e0       	ldi	r27, 0x02	; 2
 3a4:	91 50       	subi	r25, 0x01	; 1
 3a6:	a0 40       	sbci	r26, 0x00	; 0
 3a8:	b0 40       	sbci	r27, 0x00	; 0
 3aa:	e1 f7       	brne	.-8      	; 0x3a4 <main+0x244>
 3ac:	00 c0       	rjmp	.+0      	; 0x3ae <main+0x24e>
 3ae:	00 00       	nop
				_delay_ms(900);
				lc++;
 3b0:	ef ef       	ldi	r30, 0xFF	; 255
 3b2:	ae 1a       	sub	r10, r30
 3b4:	be 0a       	sbc	r11, r30
 3b6:	f6 e0       	ldi	r31, 0x06	; 6
 3b8:	8f 0e       	add	r8, r31
 3ba:	91 1c       	adc	r9, r1
		qsort((void*)buzzers, size, sizeof(buzzers[0]), comparator);
		
		if(buzzerIndex > 0)
		{
			int lc=0;
			while(lc < buzzerIndex)
 3bc:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <_edata>
 3c0:	90 e0       	ldi	r25, 0x00	; 0
 3c2:	a8 16       	cp	r10, r24
 3c4:	b9 06       	cpc	r11, r25
 3c6:	0c f4       	brge	.+2      	; 0x3ca <main+0x26a>
 3c8:	bf cf       	rjmp	.-130    	; 0x348 <main+0x1e8>
				PORTA = 0x00;
				_delay_ms(900);
				lc++;
			}
			
			buzzerIndex = 0;
 3ca:	10 92 60 00 	sts	0x0060, r1	; 0x800060 <_edata>
		}
		
		
		PORTA = 0b10000000;
 3ce:	80 e8       	ldi	r24, 0x80	; 128
 3d0:	8b bb       	out	0x1b, r24	; 27
 3d2:	87 ea       	ldi	r24, 0xA7	; 167
 3d4:	91 e6       	ldi	r25, 0x61	; 97
 3d6:	01 97       	sbiw	r24, 0x01	; 1
 3d8:	f1 f7       	brne	.-4      	; 0x3d6 <main+0x276>
 3da:	00 c0       	rjmp	.+0      	; 0x3dc <main+0x27c>
 3dc:	00 00       	nop
		_delay_ms(100);
		PORTA = 0;
 3de:	1b ba       	out	0x1b, r1	; 27
		

	}
 3e0:	ea ce       	rjmp	.-556    	; 0x1b6 <main+0x56>

000003e2 <__subsf3>:
 3e2:	50 58       	subi	r21, 0x80	; 128

000003e4 <__addsf3>:
 3e4:	bb 27       	eor	r27, r27
 3e6:	aa 27       	eor	r26, r26
 3e8:	0e 94 09 02 	call	0x412	; 0x412 <__addsf3x>
 3ec:	0c 94 ab 02 	jmp	0x556	; 0x556 <__fp_round>
 3f0:	0e 94 9d 02 	call	0x53a	; 0x53a <__fp_pscA>
 3f4:	38 f0       	brcs	.+14     	; 0x404 <__LOCK_REGION_LENGTH__+0x4>
 3f6:	0e 94 a4 02 	call	0x548	; 0x548 <__fp_pscB>
 3fa:	20 f0       	brcs	.+8      	; 0x404 <__LOCK_REGION_LENGTH__+0x4>
 3fc:	39 f4       	brne	.+14     	; 0x40c <__LOCK_REGION_LENGTH__+0xc>
 3fe:	9f 3f       	cpi	r25, 0xFF	; 255
 400:	19 f4       	brne	.+6      	; 0x408 <__LOCK_REGION_LENGTH__+0x8>
 402:	26 f4       	brtc	.+8      	; 0x40c <__LOCK_REGION_LENGTH__+0xc>
 404:	0c 94 9a 02 	jmp	0x534	; 0x534 <__fp_nan>
 408:	0e f4       	brtc	.+2      	; 0x40c <__LOCK_REGION_LENGTH__+0xc>
 40a:	e0 95       	com	r30
 40c:	e7 fb       	bst	r30, 7
 40e:	0c 94 94 02 	jmp	0x528	; 0x528 <__fp_inf>

00000412 <__addsf3x>:
 412:	e9 2f       	mov	r30, r25
 414:	0e 94 bc 02 	call	0x578	; 0x578 <__fp_split3>
 418:	58 f3       	brcs	.-42     	; 0x3f0 <__addsf3+0xc>
 41a:	ba 17       	cp	r27, r26
 41c:	62 07       	cpc	r22, r18
 41e:	73 07       	cpc	r23, r19
 420:	84 07       	cpc	r24, r20
 422:	95 07       	cpc	r25, r21
 424:	20 f0       	brcs	.+8      	; 0x42e <__addsf3x+0x1c>
 426:	79 f4       	brne	.+30     	; 0x446 <__addsf3x+0x34>
 428:	a6 f5       	brtc	.+104    	; 0x492 <__addsf3x+0x80>
 42a:	0c 94 de 02 	jmp	0x5bc	; 0x5bc <__fp_zero>
 42e:	0e f4       	brtc	.+2      	; 0x432 <__addsf3x+0x20>
 430:	e0 95       	com	r30
 432:	0b 2e       	mov	r0, r27
 434:	ba 2f       	mov	r27, r26
 436:	a0 2d       	mov	r26, r0
 438:	0b 01       	movw	r0, r22
 43a:	b9 01       	movw	r22, r18
 43c:	90 01       	movw	r18, r0
 43e:	0c 01       	movw	r0, r24
 440:	ca 01       	movw	r24, r20
 442:	a0 01       	movw	r20, r0
 444:	11 24       	eor	r1, r1
 446:	ff 27       	eor	r31, r31
 448:	59 1b       	sub	r21, r25
 44a:	99 f0       	breq	.+38     	; 0x472 <__addsf3x+0x60>
 44c:	59 3f       	cpi	r21, 0xF9	; 249
 44e:	50 f4       	brcc	.+20     	; 0x464 <__addsf3x+0x52>
 450:	50 3e       	cpi	r21, 0xE0	; 224
 452:	68 f1       	brcs	.+90     	; 0x4ae <__addsf3x+0x9c>
 454:	1a 16       	cp	r1, r26
 456:	f0 40       	sbci	r31, 0x00	; 0
 458:	a2 2f       	mov	r26, r18
 45a:	23 2f       	mov	r18, r19
 45c:	34 2f       	mov	r19, r20
 45e:	44 27       	eor	r20, r20
 460:	58 5f       	subi	r21, 0xF8	; 248
 462:	f3 cf       	rjmp	.-26     	; 0x44a <__addsf3x+0x38>
 464:	46 95       	lsr	r20
 466:	37 95       	ror	r19
 468:	27 95       	ror	r18
 46a:	a7 95       	ror	r26
 46c:	f0 40       	sbci	r31, 0x00	; 0
 46e:	53 95       	inc	r21
 470:	c9 f7       	brne	.-14     	; 0x464 <__addsf3x+0x52>
 472:	7e f4       	brtc	.+30     	; 0x492 <__addsf3x+0x80>
 474:	1f 16       	cp	r1, r31
 476:	ba 0b       	sbc	r27, r26
 478:	62 0b       	sbc	r22, r18
 47a:	73 0b       	sbc	r23, r19
 47c:	84 0b       	sbc	r24, r20
 47e:	ba f0       	brmi	.+46     	; 0x4ae <__addsf3x+0x9c>
 480:	91 50       	subi	r25, 0x01	; 1
 482:	a1 f0       	breq	.+40     	; 0x4ac <__addsf3x+0x9a>
 484:	ff 0f       	add	r31, r31
 486:	bb 1f       	adc	r27, r27
 488:	66 1f       	adc	r22, r22
 48a:	77 1f       	adc	r23, r23
 48c:	88 1f       	adc	r24, r24
 48e:	c2 f7       	brpl	.-16     	; 0x480 <__addsf3x+0x6e>
 490:	0e c0       	rjmp	.+28     	; 0x4ae <__addsf3x+0x9c>
 492:	ba 0f       	add	r27, r26
 494:	62 1f       	adc	r22, r18
 496:	73 1f       	adc	r23, r19
 498:	84 1f       	adc	r24, r20
 49a:	48 f4       	brcc	.+18     	; 0x4ae <__addsf3x+0x9c>
 49c:	87 95       	ror	r24
 49e:	77 95       	ror	r23
 4a0:	67 95       	ror	r22
 4a2:	b7 95       	ror	r27
 4a4:	f7 95       	ror	r31
 4a6:	9e 3f       	cpi	r25, 0xFE	; 254
 4a8:	08 f0       	brcs	.+2      	; 0x4ac <__addsf3x+0x9a>
 4aa:	b0 cf       	rjmp	.-160    	; 0x40c <__LOCK_REGION_LENGTH__+0xc>
 4ac:	93 95       	inc	r25
 4ae:	88 0f       	add	r24, r24
 4b0:	08 f0       	brcs	.+2      	; 0x4b4 <__addsf3x+0xa2>
 4b2:	99 27       	eor	r25, r25
 4b4:	ee 0f       	add	r30, r30
 4b6:	97 95       	ror	r25
 4b8:	87 95       	ror	r24
 4ba:	08 95       	ret

000004bc <__fixsfsi>:
 4bc:	0e 94 65 02 	call	0x4ca	; 0x4ca <__fixunssfsi>
 4c0:	68 94       	set
 4c2:	b1 11       	cpse	r27, r1
 4c4:	0c 94 df 02 	jmp	0x5be	; 0x5be <__fp_szero>
 4c8:	08 95       	ret

000004ca <__fixunssfsi>:
 4ca:	0e 94 c4 02 	call	0x588	; 0x588 <__fp_splitA>
 4ce:	88 f0       	brcs	.+34     	; 0x4f2 <__fixunssfsi+0x28>
 4d0:	9f 57       	subi	r25, 0x7F	; 127
 4d2:	98 f0       	brcs	.+38     	; 0x4fa <__fixunssfsi+0x30>
 4d4:	b9 2f       	mov	r27, r25
 4d6:	99 27       	eor	r25, r25
 4d8:	b7 51       	subi	r27, 0x17	; 23
 4da:	b0 f0       	brcs	.+44     	; 0x508 <__fixunssfsi+0x3e>
 4dc:	e1 f0       	breq	.+56     	; 0x516 <__fixunssfsi+0x4c>
 4de:	66 0f       	add	r22, r22
 4e0:	77 1f       	adc	r23, r23
 4e2:	88 1f       	adc	r24, r24
 4e4:	99 1f       	adc	r25, r25
 4e6:	1a f0       	brmi	.+6      	; 0x4ee <__fixunssfsi+0x24>
 4e8:	ba 95       	dec	r27
 4ea:	c9 f7       	brne	.-14     	; 0x4de <__fixunssfsi+0x14>
 4ec:	14 c0       	rjmp	.+40     	; 0x516 <__fixunssfsi+0x4c>
 4ee:	b1 30       	cpi	r27, 0x01	; 1
 4f0:	91 f0       	breq	.+36     	; 0x516 <__fixunssfsi+0x4c>
 4f2:	0e 94 de 02 	call	0x5bc	; 0x5bc <__fp_zero>
 4f6:	b1 e0       	ldi	r27, 0x01	; 1
 4f8:	08 95       	ret
 4fa:	0c 94 de 02 	jmp	0x5bc	; 0x5bc <__fp_zero>
 4fe:	67 2f       	mov	r22, r23
 500:	78 2f       	mov	r23, r24
 502:	88 27       	eor	r24, r24
 504:	b8 5f       	subi	r27, 0xF8	; 248
 506:	39 f0       	breq	.+14     	; 0x516 <__fixunssfsi+0x4c>
 508:	b9 3f       	cpi	r27, 0xF9	; 249
 50a:	cc f3       	brlt	.-14     	; 0x4fe <__fixunssfsi+0x34>
 50c:	86 95       	lsr	r24
 50e:	77 95       	ror	r23
 510:	67 95       	ror	r22
 512:	b3 95       	inc	r27
 514:	d9 f7       	brne	.-10     	; 0x50c <__fixunssfsi+0x42>
 516:	3e f4       	brtc	.+14     	; 0x526 <__fixunssfsi+0x5c>
 518:	90 95       	com	r25
 51a:	80 95       	com	r24
 51c:	70 95       	com	r23
 51e:	61 95       	neg	r22
 520:	7f 4f       	sbci	r23, 0xFF	; 255
 522:	8f 4f       	sbci	r24, 0xFF	; 255
 524:	9f 4f       	sbci	r25, 0xFF	; 255
 526:	08 95       	ret

00000528 <__fp_inf>:
 528:	97 f9       	bld	r25, 7
 52a:	9f 67       	ori	r25, 0x7F	; 127
 52c:	80 e8       	ldi	r24, 0x80	; 128
 52e:	70 e0       	ldi	r23, 0x00	; 0
 530:	60 e0       	ldi	r22, 0x00	; 0
 532:	08 95       	ret

00000534 <__fp_nan>:
 534:	9f ef       	ldi	r25, 0xFF	; 255
 536:	80 ec       	ldi	r24, 0xC0	; 192
 538:	08 95       	ret

0000053a <__fp_pscA>:
 53a:	00 24       	eor	r0, r0
 53c:	0a 94       	dec	r0
 53e:	16 16       	cp	r1, r22
 540:	17 06       	cpc	r1, r23
 542:	18 06       	cpc	r1, r24
 544:	09 06       	cpc	r0, r25
 546:	08 95       	ret

00000548 <__fp_pscB>:
 548:	00 24       	eor	r0, r0
 54a:	0a 94       	dec	r0
 54c:	12 16       	cp	r1, r18
 54e:	13 06       	cpc	r1, r19
 550:	14 06       	cpc	r1, r20
 552:	05 06       	cpc	r0, r21
 554:	08 95       	ret

00000556 <__fp_round>:
 556:	09 2e       	mov	r0, r25
 558:	03 94       	inc	r0
 55a:	00 0c       	add	r0, r0
 55c:	11 f4       	brne	.+4      	; 0x562 <__fp_round+0xc>
 55e:	88 23       	and	r24, r24
 560:	52 f0       	brmi	.+20     	; 0x576 <__fp_round+0x20>
 562:	bb 0f       	add	r27, r27
 564:	40 f4       	brcc	.+16     	; 0x576 <__fp_round+0x20>
 566:	bf 2b       	or	r27, r31
 568:	11 f4       	brne	.+4      	; 0x56e <__fp_round+0x18>
 56a:	60 ff       	sbrs	r22, 0
 56c:	04 c0       	rjmp	.+8      	; 0x576 <__fp_round+0x20>
 56e:	6f 5f       	subi	r22, 0xFF	; 255
 570:	7f 4f       	sbci	r23, 0xFF	; 255
 572:	8f 4f       	sbci	r24, 0xFF	; 255
 574:	9f 4f       	sbci	r25, 0xFF	; 255
 576:	08 95       	ret

00000578 <__fp_split3>:
 578:	57 fd       	sbrc	r21, 7
 57a:	90 58       	subi	r25, 0x80	; 128
 57c:	44 0f       	add	r20, r20
 57e:	55 1f       	adc	r21, r21
 580:	59 f0       	breq	.+22     	; 0x598 <__fp_splitA+0x10>
 582:	5f 3f       	cpi	r21, 0xFF	; 255
 584:	71 f0       	breq	.+28     	; 0x5a2 <__fp_splitA+0x1a>
 586:	47 95       	ror	r20

00000588 <__fp_splitA>:
 588:	88 0f       	add	r24, r24
 58a:	97 fb       	bst	r25, 7
 58c:	99 1f       	adc	r25, r25
 58e:	61 f0       	breq	.+24     	; 0x5a8 <__fp_splitA+0x20>
 590:	9f 3f       	cpi	r25, 0xFF	; 255
 592:	79 f0       	breq	.+30     	; 0x5b2 <__fp_splitA+0x2a>
 594:	87 95       	ror	r24
 596:	08 95       	ret
 598:	12 16       	cp	r1, r18
 59a:	13 06       	cpc	r1, r19
 59c:	14 06       	cpc	r1, r20
 59e:	55 1f       	adc	r21, r21
 5a0:	f2 cf       	rjmp	.-28     	; 0x586 <__fp_split3+0xe>
 5a2:	46 95       	lsr	r20
 5a4:	f1 df       	rcall	.-30     	; 0x588 <__fp_splitA>
 5a6:	08 c0       	rjmp	.+16     	; 0x5b8 <__fp_splitA+0x30>
 5a8:	16 16       	cp	r1, r22
 5aa:	17 06       	cpc	r1, r23
 5ac:	18 06       	cpc	r1, r24
 5ae:	99 1f       	adc	r25, r25
 5b0:	f1 cf       	rjmp	.-30     	; 0x594 <__fp_splitA+0xc>
 5b2:	86 95       	lsr	r24
 5b4:	71 05       	cpc	r23, r1
 5b6:	61 05       	cpc	r22, r1
 5b8:	08 94       	sec
 5ba:	08 95       	ret

000005bc <__fp_zero>:
 5bc:	e8 94       	clt

000005be <__fp_szero>:
 5be:	bb 27       	eor	r27, r27
 5c0:	66 27       	eor	r22, r22
 5c2:	77 27       	eor	r23, r23
 5c4:	cb 01       	movw	r24, r22
 5c6:	97 f9       	bld	r25, 7
 5c8:	08 95       	ret

000005ca <swapfunc>:
 5ca:	dc 01       	movw	r26, r24
 5cc:	fb 01       	movw	r30, r22
 5ce:	8c 91       	ld	r24, X
 5d0:	90 81       	ld	r25, Z
 5d2:	9d 93       	st	X+, r25
 5d4:	81 93       	st	Z+, r24
 5d6:	41 50       	subi	r20, 0x01	; 1
 5d8:	51 09       	sbc	r21, r1
 5da:	14 16       	cp	r1, r20
 5dc:	15 06       	cpc	r1, r21
 5de:	bc f3       	brlt	.-18     	; 0x5ce <swapfunc+0x4>
 5e0:	08 95       	ret

000005e2 <med3>:
 5e2:	a0 e0       	ldi	r26, 0x00	; 0
 5e4:	b0 e0       	ldi	r27, 0x00	; 0
 5e6:	e7 ef       	ldi	r30, 0xF7	; 247
 5e8:	f2 e0       	ldi	r31, 0x02	; 2
 5ea:	0c 94 3c 07 	jmp	0xe78	; 0xe78 <__prologue_saves__+0x14>
 5ee:	7c 01       	movw	r14, r24
 5f0:	6b 01       	movw	r12, r22
 5f2:	d4 2f       	mov	r29, r20
 5f4:	c5 2f       	mov	r28, r21
 5f6:	89 01       	movw	r16, r18
 5f8:	f9 01       	movw	r30, r18
 5fa:	09 95       	icall
 5fc:	6d 2f       	mov	r22, r29
 5fe:	7c 2f       	mov	r23, r28
 600:	97 ff       	sbrs	r25, 7
 602:	10 c0       	rjmp	.+32     	; 0x624 <med3+0x42>
 604:	c6 01       	movw	r24, r12
 606:	f8 01       	movw	r30, r16
 608:	09 95       	icall
 60a:	97 ff       	sbrs	r25, 7
 60c:	02 c0       	rjmp	.+4      	; 0x612 <med3+0x30>
 60e:	c6 01       	movw	r24, r12
 610:	18 c0       	rjmp	.+48     	; 0x642 <med3+0x60>
 612:	6d 2f       	mov	r22, r29
 614:	7c 2f       	mov	r23, r28
 616:	c7 01       	movw	r24, r14
 618:	f8 01       	movw	r30, r16
 61a:	09 95       	icall
 61c:	97 fd       	sbrc	r25, 7
 61e:	0f c0       	rjmp	.+30     	; 0x63e <med3+0x5c>
 620:	c7 01       	movw	r24, r14
 622:	0f c0       	rjmp	.+30     	; 0x642 <med3+0x60>
 624:	c6 01       	movw	r24, r12
 626:	f8 01       	movw	r30, r16
 628:	09 95       	icall
 62a:	18 16       	cp	r1, r24
 62c:	19 06       	cpc	r1, r25
 62e:	7c f3       	brlt	.-34     	; 0x60e <med3+0x2c>
 630:	6d 2f       	mov	r22, r29
 632:	7c 2f       	mov	r23, r28
 634:	c7 01       	movw	r24, r14
 636:	f8 01       	movw	r30, r16
 638:	09 95       	icall
 63a:	97 fd       	sbrc	r25, 7
 63c:	f1 cf       	rjmp	.-30     	; 0x620 <med3+0x3e>
 63e:	8d 2f       	mov	r24, r29
 640:	9c 2f       	mov	r25, r28
 642:	cd b7       	in	r28, 0x3d	; 61
 644:	de b7       	in	r29, 0x3e	; 62
 646:	e8 e0       	ldi	r30, 0x08	; 8
 648:	0c 94 58 07 	jmp	0xeb0	; 0xeb0 <__epilogue_restores__+0x14>

0000064c <qsort>:
 64c:	aa e0       	ldi	r26, 0x0A	; 10
 64e:	b0 e0       	ldi	r27, 0x00	; 0
 650:	ec e2       	ldi	r30, 0x2C	; 44
 652:	f3 e0       	ldi	r31, 0x03	; 3
 654:	0c 94 32 07 	jmp	0xe64	; 0xe64 <__prologue_saves__>
 658:	8c 01       	movw	r16, r24
 65a:	7b 01       	movw	r14, r22
 65c:	5a 87       	std	Y+10, r21	; 0x0a
 65e:	49 87       	std	Y+9, r20	; 0x09
 660:	69 01       	movw	r12, r18
 662:	29 85       	ldd	r18, Y+9	; 0x09
 664:	3a 85       	ldd	r19, Y+10	; 0x0a
 666:	20 0f       	add	r18, r16
 668:	31 1f       	adc	r19, r17
 66a:	3a 83       	std	Y+2, r19	; 0x02
 66c:	29 83       	std	Y+1, r18	; 0x01
 66e:	37 e0       	ldi	r19, 0x07	; 7
 670:	e3 16       	cp	r14, r19
 672:	f1 04       	cpc	r15, r1
 674:	70 f5       	brcc	.+92     	; 0x6d2 <qsort+0x86>
 676:	69 80       	ldd	r6, Y+1	; 0x01
 678:	7a 80       	ldd	r7, Y+2	; 0x02
 67a:	49 85       	ldd	r20, Y+9	; 0x09
 67c:	5a 85       	ldd	r21, Y+10	; 0x0a
 67e:	e4 9e       	mul	r14, r20
 680:	50 01       	movw	r10, r0
 682:	e5 9e       	mul	r14, r21
 684:	b0 0c       	add	r11, r0
 686:	f4 9e       	mul	r15, r20
 688:	b0 0c       	add	r11, r0
 68a:	11 24       	eor	r1, r1
 68c:	a0 0e       	add	r10, r16
 68e:	b1 1e       	adc	r11, r17
 690:	6a 14       	cp	r6, r10
 692:	7b 04       	cpc	r7, r11
 694:	08 f0       	brcs	.+2      	; 0x698 <qsort+0x4c>
 696:	7a c1       	rjmp	.+756    	; 0x98c <__stack+0x12d>
 698:	73 01       	movw	r14, r6
 69a:	0e 15       	cp	r16, r14
 69c:	1f 05       	cpc	r17, r15
 69e:	28 f0       	brcs	.+10     	; 0x6aa <qsort+0x5e>
 6a0:	89 85       	ldd	r24, Y+9	; 0x09
 6a2:	9a 85       	ldd	r25, Y+10	; 0x0a
 6a4:	68 0e       	add	r6, r24
 6a6:	79 1e       	adc	r7, r25
 6a8:	f3 cf       	rjmp	.-26     	; 0x690 <qsort+0x44>
 6aa:	47 01       	movw	r8, r14
 6ac:	e9 85       	ldd	r30, Y+9	; 0x09
 6ae:	fa 85       	ldd	r31, Y+10	; 0x0a
 6b0:	8e 1a       	sub	r8, r30
 6b2:	9f 0a       	sbc	r9, r31
 6b4:	b7 01       	movw	r22, r14
 6b6:	c4 01       	movw	r24, r8
 6b8:	f6 01       	movw	r30, r12
 6ba:	09 95       	icall
 6bc:	18 16       	cp	r1, r24
 6be:	19 06       	cpc	r1, r25
 6c0:	7c f7       	brge	.-34     	; 0x6a0 <qsort+0x54>
 6c2:	49 85       	ldd	r20, Y+9	; 0x09
 6c4:	5a 85       	ldd	r21, Y+10	; 0x0a
 6c6:	b4 01       	movw	r22, r8
 6c8:	c7 01       	movw	r24, r14
 6ca:	0e 94 e5 02 	call	0x5ca	; 0x5ca <swapfunc>
 6ce:	74 01       	movw	r14, r8
 6d0:	e4 cf       	rjmp	.-56     	; 0x69a <qsort+0x4e>
 6d2:	c7 01       	movw	r24, r14
 6d4:	96 95       	lsr	r25
 6d6:	87 95       	ror	r24
 6d8:	29 85       	ldd	r18, Y+9	; 0x09
 6da:	3a 85       	ldd	r19, Y+10	; 0x0a
 6dc:	82 9f       	mul	r24, r18
 6de:	50 01       	movw	r10, r0
 6e0:	83 9f       	mul	r24, r19
 6e2:	b0 0c       	add	r11, r0
 6e4:	92 9f       	mul	r25, r18
 6e6:	b0 0c       	add	r11, r0
 6e8:	11 24       	eor	r1, r1
 6ea:	a0 0e       	add	r10, r16
 6ec:	b1 1e       	adc	r11, r17
 6ee:	a7 01       	movw	r20, r14
 6f0:	41 50       	subi	r20, 0x01	; 1
 6f2:	51 09       	sbc	r21, r1
 6f4:	5c 83       	std	Y+4, r21	; 0x04
 6f6:	4b 83       	std	Y+3, r20	; 0x03
 6f8:	57 e0       	ldi	r21, 0x07	; 7
 6fa:	e5 16       	cp	r14, r21
 6fc:	f1 04       	cpc	r15, r1
 6fe:	09 f4       	brne	.+2      	; 0x702 <qsort+0xb6>
 700:	4c c0       	rjmp	.+152    	; 0x79a <qsort+0x14e>
 702:	8b 81       	ldd	r24, Y+3	; 0x03
 704:	9c 81       	ldd	r25, Y+4	; 0x04
 706:	82 9f       	mul	r24, r18
 708:	30 01       	movw	r6, r0
 70a:	83 9f       	mul	r24, r19
 70c:	70 0c       	add	r7, r0
 70e:	92 9f       	mul	r25, r18
 710:	70 0c       	add	r7, r0
 712:	11 24       	eor	r1, r1
 714:	60 0e       	add	r6, r16
 716:	71 1e       	adc	r7, r17
 718:	99 e2       	ldi	r25, 0x29	; 41
 71a:	e9 16       	cp	r14, r25
 71c:	f1 04       	cpc	r15, r1
 71e:	a8 f1       	brcs	.+106    	; 0x78a <qsort+0x13e>
 720:	c7 01       	movw	r24, r14
 722:	43 e0       	ldi	r20, 0x03	; 3
 724:	96 95       	lsr	r25
 726:	87 95       	ror	r24
 728:	4a 95       	dec	r20
 72a:	e1 f7       	brne	.-8      	; 0x724 <qsort+0xd8>
 72c:	82 9f       	mul	r24, r18
 72e:	40 01       	movw	r8, r0
 730:	83 9f       	mul	r24, r19
 732:	90 0c       	add	r9, r0
 734:	92 9f       	mul	r25, r18
 736:	90 0c       	add	r9, r0
 738:	11 24       	eor	r1, r1
 73a:	14 01       	movw	r2, r8
 73c:	22 0c       	add	r2, r2
 73e:	33 1c       	adc	r3, r3
 740:	a8 01       	movw	r20, r16
 742:	42 0d       	add	r20, r2
 744:	53 1d       	adc	r21, r3
 746:	b8 01       	movw	r22, r16
 748:	68 0d       	add	r22, r8
 74a:	79 1d       	adc	r23, r9
 74c:	96 01       	movw	r18, r12
 74e:	c8 01       	movw	r24, r16
 750:	0e 94 f1 02 	call	0x5e2	; 0x5e2 <med3>
 754:	2c 01       	movw	r4, r24
 756:	a5 01       	movw	r20, r10
 758:	48 0d       	add	r20, r8
 75a:	59 1d       	adc	r21, r9
 75c:	91 94       	neg	r9
 75e:	81 94       	neg	r8
 760:	91 08       	sbc	r9, r1
 762:	96 01       	movw	r18, r12
 764:	b5 01       	movw	r22, r10
 766:	c5 01       	movw	r24, r10
 768:	88 0d       	add	r24, r8
 76a:	99 1d       	adc	r25, r9
 76c:	0e 94 f1 02 	call	0x5e2	; 0x5e2 <med3>
 770:	5c 01       	movw	r10, r24
 772:	b3 01       	movw	r22, r6
 774:	68 0d       	add	r22, r8
 776:	79 1d       	adc	r23, r9
 778:	96 01       	movw	r18, r12
 77a:	a3 01       	movw	r20, r6
 77c:	c3 01       	movw	r24, r6
 77e:	82 19       	sub	r24, r2
 780:	93 09       	sbc	r25, r3
 782:	0e 94 f1 02 	call	0x5e2	; 0x5e2 <med3>
 786:	3c 01       	movw	r6, r24
 788:	01 c0       	rjmp	.+2      	; 0x78c <qsort+0x140>
 78a:	28 01       	movw	r4, r16
 78c:	96 01       	movw	r18, r12
 78e:	a3 01       	movw	r20, r6
 790:	b5 01       	movw	r22, r10
 792:	c2 01       	movw	r24, r4
 794:	0e 94 f1 02 	call	0x5e2	; 0x5e2 <med3>
 798:	5c 01       	movw	r10, r24
 79a:	49 85       	ldd	r20, Y+9	; 0x09
 79c:	5a 85       	ldd	r21, Y+10	; 0x0a
 79e:	b5 01       	movw	r22, r10
 7a0:	c8 01       	movw	r24, r16
 7a2:	0e 94 e5 02 	call	0x5ca	; 0x5ca <swapfunc>
 7a6:	69 80       	ldd	r6, Y+1	; 0x01
 7a8:	7a 80       	ldd	r7, Y+2	; 0x02
 7aa:	2b 81       	ldd	r18, Y+3	; 0x03
 7ac:	3c 81       	ldd	r19, Y+4	; 0x04
 7ae:	49 85       	ldd	r20, Y+9	; 0x09
 7b0:	5a 85       	ldd	r21, Y+10	; 0x0a
 7b2:	24 9f       	mul	r18, r20
 7b4:	f0 01       	movw	r30, r0
 7b6:	25 9f       	mul	r18, r21
 7b8:	f0 0d       	add	r31, r0
 7ba:	34 9f       	mul	r19, r20
 7bc:	f0 0d       	add	r31, r0
 7be:	11 24       	eor	r1, r1
 7c0:	fe 83       	std	Y+6, r31	; 0x06
 7c2:	ed 83       	std	Y+5, r30	; 0x05
 7c4:	5f 01       	movw	r10, r30
 7c6:	a0 0e       	add	r10, r16
 7c8:	b1 1e       	adc	r11, r17
 7ca:	46 0d       	add	r20, r6
 7cc:	57 1d       	adc	r21, r7
 7ce:	5c 83       	std	Y+4, r21	; 0x04
 7d0:	4b 83       	std	Y+3, r20	; 0x03
 7d2:	25 01       	movw	r4, r10
 7d4:	13 01       	movw	r2, r6
 7d6:	1a 82       	std	Y+2, r1	; 0x02
 7d8:	19 82       	std	Y+1, r1	; 0x01
 7da:	8b 80       	ldd	r8, Y+3	; 0x03
 7dc:	9c 80       	ldd	r9, Y+4	; 0x04
 7de:	89 85       	ldd	r24, Y+9	; 0x09
 7e0:	9a 85       	ldd	r25, Y+10	; 0x0a
 7e2:	88 1a       	sub	r8, r24
 7e4:	99 0a       	sbc	r9, r25
 7e6:	a8 14       	cp	r10, r8
 7e8:	b9 04       	cpc	r11, r9
 7ea:	08 f4       	brcc	.+2      	; 0x7ee <qsort+0x1a2>
 7ec:	50 c0       	rjmp	.+160    	; 0x88e <__stack+0x2f>
 7ee:	b8 01       	movw	r22, r16
 7f0:	c4 01       	movw	r24, r8
 7f2:	f6 01       	movw	r30, r12
 7f4:	09 95       	icall
 7f6:	18 16       	cp	r1, r24
 7f8:	19 06       	cpc	r1, r25
 7fa:	c4 f1       	brlt	.+112    	; 0x86c <__stack+0xd>
 7fc:	89 2b       	or	r24, r25
 7fe:	71 f4       	brne	.+28     	; 0x81c <qsort+0x1d0>
 800:	49 85       	ldd	r20, Y+9	; 0x09
 802:	5a 85       	ldd	r21, Y+10	; 0x0a
 804:	b4 01       	movw	r22, r8
 806:	c1 01       	movw	r24, r2
 808:	0e 94 e5 02 	call	0x5ca	; 0x5ca <swapfunc>
 80c:	89 85       	ldd	r24, Y+9	; 0x09
 80e:	9a 85       	ldd	r25, Y+10	; 0x0a
 810:	28 0e       	add	r2, r24
 812:	39 1e       	adc	r3, r25
 814:	e1 e0       	ldi	r30, 0x01	; 1
 816:	f0 e0       	ldi	r31, 0x00	; 0
 818:	fa 83       	std	Y+2, r31	; 0x02
 81a:	e9 83       	std	Y+1, r30	; 0x01
 81c:	2b 81       	ldd	r18, Y+3	; 0x03
 81e:	3c 81       	ldd	r19, Y+4	; 0x04
 820:	49 85       	ldd	r20, Y+9	; 0x09
 822:	5a 85       	ldd	r21, Y+10	; 0x0a
 824:	24 0f       	add	r18, r20
 826:	35 1f       	adc	r19, r21
 828:	3c 83       	std	Y+4, r19	; 0x04
 82a:	2b 83       	std	Y+3, r18	; 0x03
 82c:	d6 cf       	rjmp	.-84     	; 0x7da <qsort+0x18e>
 82e:	b8 01       	movw	r22, r16
 830:	c5 01       	movw	r24, r10
 832:	f6 01       	movw	r30, r12
 834:	09 95       	icall
 836:	95 01       	movw	r18, r10
 838:	49 85       	ldd	r20, Y+9	; 0x09
 83a:	5a 85       	ldd	r21, Y+10	; 0x0a
 83c:	24 1b       	sub	r18, r20
 83e:	35 0b       	sbc	r19, r21
 840:	38 87       	std	Y+8, r19	; 0x08
 842:	2f 83       	std	Y+7, r18	; 0x07
 844:	97 fd       	sbrc	r25, 7
 846:	16 c0       	rjmp	.+44     	; 0x874 <__stack+0x15>
 848:	89 2b       	or	r24, r25
 84a:	71 f4       	brne	.+28     	; 0x868 <__stack+0x9>
 84c:	49 85       	ldd	r20, Y+9	; 0x09
 84e:	5a 85       	ldd	r21, Y+10	; 0x0a
 850:	b2 01       	movw	r22, r4
 852:	c5 01       	movw	r24, r10
 854:	0e 94 e5 02 	call	0x5ca	; 0x5ca <swapfunc>
 858:	29 85       	ldd	r18, Y+9	; 0x09
 85a:	3a 85       	ldd	r19, Y+10	; 0x0a
 85c:	42 1a       	sub	r4, r18
 85e:	53 0a       	sbc	r5, r19
 860:	41 e0       	ldi	r20, 0x01	; 1
 862:	50 e0       	ldi	r21, 0x00	; 0
 864:	5a 83       	std	Y+2, r21	; 0x02
 866:	49 83       	std	Y+1, r20	; 0x01
 868:	af 80       	ldd	r10, Y+7	; 0x07
 86a:	b8 84       	ldd	r11, Y+8	; 0x08
 86c:	a8 14       	cp	r10, r8
 86e:	b9 04       	cpc	r11, r9
 870:	f0 f6       	brcc	.-68     	; 0x82e <qsort+0x1e2>
 872:	0d c0       	rjmp	.+26     	; 0x88e <__stack+0x2f>
 874:	49 85       	ldd	r20, Y+9	; 0x09
 876:	5a 85       	ldd	r21, Y+10	; 0x0a
 878:	b5 01       	movw	r22, r10
 87a:	c4 01       	movw	r24, r8
 87c:	0e 94 e5 02 	call	0x5ca	; 0x5ca <swapfunc>
 880:	af 80       	ldd	r10, Y+7	; 0x07
 882:	b8 84       	ldd	r11, Y+8	; 0x08
 884:	41 e0       	ldi	r20, 0x01	; 1
 886:	50 e0       	ldi	r21, 0x00	; 0
 888:	5a 83       	std	Y+2, r21	; 0x02
 88a:	49 83       	std	Y+1, r20	; 0x01
 88c:	c7 cf       	rjmp	.-114    	; 0x81c <qsort+0x1d0>
 88e:	89 81       	ldd	r24, Y+1	; 0x01
 890:	9a 81       	ldd	r25, Y+2	; 0x02
 892:	89 2b       	or	r24, r25
 894:	09 f4       	brne	.+2      	; 0x898 <__stack+0x39>
 896:	4f c0       	rjmp	.+158    	; 0x936 <__stack+0xd7>
 898:	6d 80       	ldd	r6, Y+5	; 0x05
 89a:	7e 80       	ldd	r7, Y+6	; 0x06
 89c:	29 85       	ldd	r18, Y+9	; 0x09
 89e:	3a 85       	ldd	r19, Y+10	; 0x0a
 8a0:	62 0e       	add	r6, r18
 8a2:	73 1e       	adc	r7, r19
 8a4:	60 0e       	add	r6, r16
 8a6:	71 1e       	adc	r7, r17
 8a8:	74 01       	movw	r14, r8
 8aa:	e2 18       	sub	r14, r2
 8ac:	f3 08       	sbc	r15, r3
 8ae:	a1 01       	movw	r20, r2
 8b0:	40 1b       	sub	r20, r16
 8b2:	51 0b       	sbc	r21, r17
 8b4:	e4 16       	cp	r14, r20
 8b6:	f5 06       	cpc	r15, r21
 8b8:	0c f4       	brge	.+2      	; 0x8bc <__stack+0x5d>
 8ba:	a7 01       	movw	r20, r14
 8bc:	14 16       	cp	r1, r20
 8be:	15 06       	cpc	r1, r21
 8c0:	34 f4       	brge	.+12     	; 0x8ce <__stack+0x6f>
 8c2:	b4 01       	movw	r22, r8
 8c4:	64 1b       	sub	r22, r20
 8c6:	75 0b       	sbc	r23, r21
 8c8:	c8 01       	movw	r24, r16
 8ca:	0e 94 e5 02 	call	0x5ca	; 0x5ca <swapfunc>
 8ce:	a2 01       	movw	r20, r4
 8d0:	4a 19       	sub	r20, r10
 8d2:	5b 09       	sbc	r21, r11
 8d4:	5a 01       	movw	r10, r20
 8d6:	a3 01       	movw	r20, r6
 8d8:	44 19       	sub	r20, r4
 8da:	55 09       	sbc	r21, r5
 8dc:	89 85       	ldd	r24, Y+9	; 0x09
 8de:	9a 85       	ldd	r25, Y+10	; 0x0a
 8e0:	48 1b       	sub	r20, r24
 8e2:	59 0b       	sbc	r21, r25
 8e4:	a4 16       	cp	r10, r20
 8e6:	b5 06       	cpc	r11, r21
 8e8:	08 f4       	brcc	.+2      	; 0x8ec <__stack+0x8d>
 8ea:	a5 01       	movw	r20, r10
 8ec:	14 16       	cp	r1, r20
 8ee:	15 06       	cpc	r1, r21
 8f0:	34 f4       	brge	.+12     	; 0x8fe <__stack+0x9f>
 8f2:	b3 01       	movw	r22, r6
 8f4:	64 1b       	sub	r22, r20
 8f6:	75 0b       	sbc	r23, r21
 8f8:	c4 01       	movw	r24, r8
 8fa:	0e 94 e5 02 	call	0x5ca	; 0x5ca <swapfunc>
 8fe:	e9 85       	ldd	r30, Y+9	; 0x09
 900:	fa 85       	ldd	r31, Y+10	; 0x0a
 902:	ee 15       	cp	r30, r14
 904:	ff 05       	cpc	r31, r15
 906:	48 f4       	brcc	.+18     	; 0x91a <__stack+0xbb>
 908:	c7 01       	movw	r24, r14
 90a:	bf 01       	movw	r22, r30
 90c:	0e 94 13 07 	call	0xe26	; 0xe26 <__udivmodhi4>
 910:	96 01       	movw	r18, r12
 912:	af 01       	movw	r20, r30
 914:	c8 01       	movw	r24, r16
 916:	0e 94 26 03 	call	0x64c	; 0x64c <qsort>
 91a:	29 85       	ldd	r18, Y+9	; 0x09
 91c:	3a 85       	ldd	r19, Y+10	; 0x0a
 91e:	2a 15       	cp	r18, r10
 920:	3b 05       	cpc	r19, r11
 922:	a0 f5       	brcc	.+104    	; 0x98c <__stack+0x12d>
 924:	83 01       	movw	r16, r6
 926:	0a 19       	sub	r16, r10
 928:	1b 09       	sbc	r17, r11
 92a:	c5 01       	movw	r24, r10
 92c:	b9 01       	movw	r22, r18
 92e:	0e 94 13 07 	call	0xe26	; 0xe26 <__udivmodhi4>
 932:	7b 01       	movw	r14, r22
 934:	96 ce       	rjmp	.-724    	; 0x662 <qsort+0x16>
 936:	e9 85       	ldd	r30, Y+9	; 0x09
 938:	fa 85       	ldd	r31, Y+10	; 0x0a
 93a:	ee 9e       	mul	r14, r30
 93c:	50 01       	movw	r10, r0
 93e:	ef 9e       	mul	r14, r31
 940:	b0 0c       	add	r11, r0
 942:	fe 9e       	mul	r15, r30
 944:	b0 0c       	add	r11, r0
 946:	11 24       	eor	r1, r1
 948:	a0 0e       	add	r10, r16
 94a:	b1 1e       	adc	r11, r17
 94c:	6a 14       	cp	r6, r10
 94e:	7b 04       	cpc	r7, r11
 950:	e8 f4       	brcc	.+58     	; 0x98c <__stack+0x12d>
 952:	73 01       	movw	r14, r6
 954:	0e 15       	cp	r16, r14
 956:	1f 05       	cpc	r17, r15
 958:	28 f0       	brcs	.+10     	; 0x964 <__stack+0x105>
 95a:	89 85       	ldd	r24, Y+9	; 0x09
 95c:	9a 85       	ldd	r25, Y+10	; 0x0a
 95e:	68 0e       	add	r6, r24
 960:	79 1e       	adc	r7, r25
 962:	f4 cf       	rjmp	.-24     	; 0x94c <__stack+0xed>
 964:	47 01       	movw	r8, r14
 966:	e9 85       	ldd	r30, Y+9	; 0x09
 968:	fa 85       	ldd	r31, Y+10	; 0x0a
 96a:	8e 1a       	sub	r8, r30
 96c:	9f 0a       	sbc	r9, r31
 96e:	b7 01       	movw	r22, r14
 970:	c4 01       	movw	r24, r8
 972:	f6 01       	movw	r30, r12
 974:	09 95       	icall
 976:	18 16       	cp	r1, r24
 978:	19 06       	cpc	r1, r25
 97a:	7c f7       	brge	.-34     	; 0x95a <__stack+0xfb>
 97c:	49 85       	ldd	r20, Y+9	; 0x09
 97e:	5a 85       	ldd	r21, Y+10	; 0x0a
 980:	b4 01       	movw	r22, r8
 982:	c7 01       	movw	r24, r14
 984:	0e 94 e5 02 	call	0x5ca	; 0x5ca <swapfunc>
 988:	74 01       	movw	r14, r8
 98a:	e4 cf       	rjmp	.-56     	; 0x954 <__stack+0xf5>
 98c:	2a 96       	adiw	r28, 0x0a	; 10
 98e:	e2 e1       	ldi	r30, 0x12	; 18
 990:	0c 94 4e 07 	jmp	0xe9c	; 0xe9c <__epilogue_restores__>

00000994 <atof>:
 994:	66 27       	eor	r22, r22
 996:	77 27       	eor	r23, r23
 998:	0c 94 ce 04 	jmp	0x99c	; 0x99c <strtod>

0000099c <strtod>:
 99c:	a0 e0       	ldi	r26, 0x00	; 0
 99e:	b0 e0       	ldi	r27, 0x00	; 0
 9a0:	e4 ed       	ldi	r30, 0xD4	; 212
 9a2:	f4 e0       	ldi	r31, 0x04	; 4
 9a4:	0c 94 38 07 	jmp	0xe70	; 0xe70 <__prologue_saves__+0xc>
 9a8:	ec 01       	movw	r28, r24
 9aa:	6b 01       	movw	r12, r22
 9ac:	61 15       	cp	r22, r1
 9ae:	71 05       	cpc	r23, r1
 9b0:	19 f0       	breq	.+6      	; 0x9b8 <strtod+0x1c>
 9b2:	fb 01       	movw	r30, r22
 9b4:	91 83       	std	Z+1, r25	; 0x01
 9b6:	80 83       	st	Z, r24
 9b8:	7e 01       	movw	r14, r28
 9ba:	ff ef       	ldi	r31, 0xFF	; 255
 9bc:	ef 1a       	sub	r14, r31
 9be:	ff 0a       	sbc	r15, r31
 9c0:	08 81       	ld	r16, Y
 9c2:	80 2f       	mov	r24, r16
 9c4:	90 e0       	ldi	r25, 0x00	; 0
 9c6:	0e 94 1c 06 	call	0xc38	; 0xc38 <isspace>
 9ca:	89 2b       	or	r24, r25
 9cc:	11 f0       	breq	.+4      	; 0x9d2 <strtod+0x36>
 9ce:	e7 01       	movw	r28, r14
 9d0:	f3 cf       	rjmp	.-26     	; 0x9b8 <strtod+0x1c>
 9d2:	0d 32       	cpi	r16, 0x2D	; 45
 9d4:	39 f4       	brne	.+14     	; 0x9e4 <strtod+0x48>
 9d6:	7e 01       	movw	r14, r28
 9d8:	82 e0       	ldi	r24, 0x02	; 2
 9da:	e8 0e       	add	r14, r24
 9dc:	f1 1c       	adc	r15, r1
 9de:	09 81       	ldd	r16, Y+1	; 0x01
 9e0:	11 e0       	ldi	r17, 0x01	; 1
 9e2:	08 c0       	rjmp	.+16     	; 0x9f4 <strtod+0x58>
 9e4:	0b 32       	cpi	r16, 0x2B	; 43
 9e6:	29 f4       	brne	.+10     	; 0x9f2 <strtod+0x56>
 9e8:	7e 01       	movw	r14, r28
 9ea:	92 e0       	ldi	r25, 0x02	; 2
 9ec:	e9 0e       	add	r14, r25
 9ee:	f1 1c       	adc	r15, r1
 9f0:	09 81       	ldd	r16, Y+1	; 0x01
 9f2:	10 e0       	ldi	r17, 0x00	; 0
 9f4:	e7 01       	movw	r28, r14
 9f6:	21 97       	sbiw	r28, 0x01	; 1
 9f8:	43 e0       	ldi	r20, 0x03	; 3
 9fa:	50 e0       	ldi	r21, 0x00	; 0
 9fc:	6c e5       	ldi	r22, 0x5C	; 92
 9fe:	70 e0       	ldi	r23, 0x00	; 0
 a00:	ce 01       	movw	r24, r28
 a02:	0e 94 25 06 	call	0xc4a	; 0xc4a <strncasecmp_P>
 a06:	89 2b       	or	r24, r25
 a08:	c1 f4       	brne	.+48     	; 0xa3a <strtod+0x9e>
 a0a:	23 96       	adiw	r28, 0x03	; 3
 a0c:	45 e0       	ldi	r20, 0x05	; 5
 a0e:	50 e0       	ldi	r21, 0x00	; 0
 a10:	67 e5       	ldi	r22, 0x57	; 87
 a12:	70 e0       	ldi	r23, 0x00	; 0
 a14:	ce 01       	movw	r24, r28
 a16:	0e 94 25 06 	call	0xc4a	; 0xc4a <strncasecmp_P>
 a1a:	89 2b       	or	r24, r25
 a1c:	09 f4       	brne	.+2      	; 0xa20 <strtod+0x84>
 a1e:	25 96       	adiw	r28, 0x05	; 5
 a20:	c1 14       	cp	r12, r1
 a22:	d1 04       	cpc	r13, r1
 a24:	19 f0       	breq	.+6      	; 0xa2c <strtod+0x90>
 a26:	f6 01       	movw	r30, r12
 a28:	d1 83       	std	Z+1, r29	; 0x01
 a2a:	c0 83       	st	Z, r28
 a2c:	11 11       	cpse	r17, r1
 a2e:	f6 c0       	rjmp	.+492    	; 0xc1c <strtod+0x280>
 a30:	60 e0       	ldi	r22, 0x00	; 0
 a32:	70 e0       	ldi	r23, 0x00	; 0
 a34:	80 e8       	ldi	r24, 0x80	; 128
 a36:	9f e7       	ldi	r25, 0x7F	; 127
 a38:	fa c0       	rjmp	.+500    	; 0xc2e <strtod+0x292>
 a3a:	43 e0       	ldi	r20, 0x03	; 3
 a3c:	50 e0       	ldi	r21, 0x00	; 0
 a3e:	64 e5       	ldi	r22, 0x54	; 84
 a40:	70 e0       	ldi	r23, 0x00	; 0
 a42:	ce 01       	movw	r24, r28
 a44:	0e 94 25 06 	call	0xc4a	; 0xc4a <strncasecmp_P>
 a48:	89 2b       	or	r24, r25
 a4a:	59 f4       	brne	.+22     	; 0xa62 <strtod+0xc6>
 a4c:	c1 14       	cp	r12, r1
 a4e:	d1 04       	cpc	r13, r1
 a50:	09 f4       	brne	.+2      	; 0xa54 <strtod+0xb8>
 a52:	e9 c0       	rjmp	.+466    	; 0xc26 <strtod+0x28a>
 a54:	f2 e0       	ldi	r31, 0x02	; 2
 a56:	ef 0e       	add	r14, r31
 a58:	f1 1c       	adc	r15, r1
 a5a:	f6 01       	movw	r30, r12
 a5c:	f1 82       	std	Z+1, r15	; 0x01
 a5e:	e0 82       	st	Z, r14
 a60:	e2 c0       	rjmp	.+452    	; 0xc26 <strtod+0x28a>
 a62:	20 e0       	ldi	r18, 0x00	; 0
 a64:	30 e0       	ldi	r19, 0x00	; 0
 a66:	a9 01       	movw	r20, r18
 a68:	c0 e0       	ldi	r28, 0x00	; 0
 a6a:	d0 e0       	ldi	r29, 0x00	; 0
 a6c:	f7 01       	movw	r30, r14
 a6e:	80 ed       	ldi	r24, 0xD0	; 208
 a70:	a8 2e       	mov	r10, r24
 a72:	a0 0e       	add	r10, r16
 a74:	89 e0       	ldi	r24, 0x09	; 9
 a76:	8a 15       	cp	r24, r10
 a78:	30 f1       	brcs	.+76     	; 0xac6 <strtod+0x12a>
 a7a:	91 2f       	mov	r25, r17
 a7c:	92 60       	ori	r25, 0x02	; 2
 a7e:	b9 2e       	mov	r11, r25
 a80:	81 2f       	mov	r24, r17
 a82:	88 70       	andi	r24, 0x08	; 8
 a84:	12 ff       	sbrs	r17, 2
 a86:	04 c0       	rjmp	.+8      	; 0xa90 <strtod+0xf4>
 a88:	81 11       	cpse	r24, r1
 a8a:	24 c0       	rjmp	.+72     	; 0xad4 <strtod+0x138>
 a8c:	21 96       	adiw	r28, 0x01	; 1
 a8e:	22 c0       	rjmp	.+68     	; 0xad4 <strtod+0x138>
 a90:	81 11       	cpse	r24, r1
 a92:	21 97       	sbiw	r28, 0x01	; 1
 a94:	a5 e0       	ldi	r26, 0x05	; 5
 a96:	b0 e0       	ldi	r27, 0x00	; 0
 a98:	0e 94 27 07 	call	0xe4e	; 0xe4e <__muluhisi3>
 a9c:	dc 01       	movw	r26, r24
 a9e:	cb 01       	movw	r24, r22
 aa0:	88 0f       	add	r24, r24
 aa2:	99 1f       	adc	r25, r25
 aa4:	aa 1f       	adc	r26, r26
 aa6:	bb 1f       	adc	r27, r27
 aa8:	9c 01       	movw	r18, r24
 aaa:	ad 01       	movw	r20, r26
 aac:	2a 0d       	add	r18, r10
 aae:	31 1d       	adc	r19, r1
 ab0:	41 1d       	adc	r20, r1
 ab2:	51 1d       	adc	r21, r1
 ab4:	28 39       	cpi	r18, 0x98	; 152
 ab6:	89 e9       	ldi	r24, 0x99	; 153
 ab8:	38 07       	cpc	r19, r24
 aba:	48 07       	cpc	r20, r24
 abc:	89 e1       	ldi	r24, 0x19	; 25
 abe:	58 07       	cpc	r21, r24
 ac0:	48 f0       	brcs	.+18     	; 0xad4 <strtod+0x138>
 ac2:	16 60       	ori	r17, 0x06	; 6
 ac4:	06 c0       	rjmp	.+12     	; 0xad2 <strtod+0x136>
 ac6:	9e ef       	ldi	r25, 0xFE	; 254
 ac8:	a9 12       	cpse	r10, r25
 aca:	0a c0       	rjmp	.+20     	; 0xae0 <strtod+0x144>
 acc:	13 fd       	sbrc	r17, 3
 ace:	40 c0       	rjmp	.+128    	; 0xb50 <strtod+0x1b4>
 ad0:	18 60       	ori	r17, 0x08	; 8
 ad2:	b1 2e       	mov	r11, r17
 ad4:	8f ef       	ldi	r24, 0xFF	; 255
 ad6:	e8 1a       	sub	r14, r24
 ad8:	f8 0a       	sbc	r15, r24
 ada:	00 81       	ld	r16, Z
 adc:	1b 2d       	mov	r17, r11
 ade:	c6 cf       	rjmp	.-116    	; 0xa6c <strtod+0xd0>
 ae0:	80 2f       	mov	r24, r16
 ae2:	8f 7d       	andi	r24, 0xDF	; 223
 ae4:	85 34       	cpi	r24, 0x45	; 69
 ae6:	a1 f5       	brne	.+104    	; 0xb50 <strtod+0x1b4>
 ae8:	80 81       	ld	r24, Z
 aea:	8d 32       	cpi	r24, 0x2D	; 45
 aec:	11 f4       	brne	.+4      	; 0xaf2 <strtod+0x156>
 aee:	10 61       	ori	r17, 0x10	; 16
 af0:	06 c0       	rjmp	.+12     	; 0xafe <strtod+0x162>
 af2:	8b 32       	cpi	r24, 0x2B	; 43
 af4:	21 f0       	breq	.+8      	; 0xafe <strtod+0x162>
 af6:	31 96       	adiw	r30, 0x01	; 1
 af8:	61 e0       	ldi	r22, 0x01	; 1
 afa:	70 e0       	ldi	r23, 0x00	; 0
 afc:	04 c0       	rjmp	.+8      	; 0xb06 <strtod+0x16a>
 afe:	81 81       	ldd	r24, Z+1	; 0x01
 b00:	32 96       	adiw	r30, 0x02	; 2
 b02:	62 e0       	ldi	r22, 0x02	; 2
 b04:	70 e0       	ldi	r23, 0x00	; 0
 b06:	80 53       	subi	r24, 0x30	; 48
 b08:	8a 30       	cpi	r24, 0x0A	; 10
 b0a:	18 f0       	brcs	.+6      	; 0xb12 <strtod+0x176>
 b0c:	e6 1b       	sub	r30, r22
 b0e:	f7 0b       	sbc	r31, r23
 b10:	1f c0       	rjmp	.+62     	; 0xb50 <strtod+0x1b4>
 b12:	60 e0       	ldi	r22, 0x00	; 0
 b14:	70 e0       	ldi	r23, 0x00	; 0
 b16:	60 38       	cpi	r22, 0x80	; 128
 b18:	9c e0       	ldi	r25, 0x0C	; 12
 b1a:	79 07       	cpc	r23, r25
 b1c:	5c f4       	brge	.+22     	; 0xb34 <strtod+0x198>
 b1e:	db 01       	movw	r26, r22
 b20:	aa 0f       	add	r26, r26
 b22:	bb 1f       	adc	r27, r27
 b24:	aa 0f       	add	r26, r26
 b26:	bb 1f       	adc	r27, r27
 b28:	6a 0f       	add	r22, r26
 b2a:	7b 1f       	adc	r23, r27
 b2c:	66 0f       	add	r22, r22
 b2e:	77 1f       	adc	r23, r23
 b30:	68 0f       	add	r22, r24
 b32:	71 1d       	adc	r23, r1
 b34:	31 96       	adiw	r30, 0x01	; 1
 b36:	df 01       	movw	r26, r30
 b38:	11 97       	sbiw	r26, 0x01	; 1
 b3a:	8c 91       	ld	r24, X
 b3c:	80 53       	subi	r24, 0x30	; 48
 b3e:	8a 30       	cpi	r24, 0x0A	; 10
 b40:	50 f3       	brcs	.-44     	; 0xb16 <strtod+0x17a>
 b42:	14 ff       	sbrs	r17, 4
 b44:	03 c0       	rjmp	.+6      	; 0xb4c <strtod+0x1b0>
 b46:	71 95       	neg	r23
 b48:	61 95       	neg	r22
 b4a:	71 09       	sbc	r23, r1
 b4c:	c6 0f       	add	r28, r22
 b4e:	d7 1f       	adc	r29, r23
 b50:	11 ff       	sbrs	r17, 1
 b52:	08 c0       	rjmp	.+16     	; 0xb64 <strtod+0x1c8>
 b54:	c1 14       	cp	r12, r1
 b56:	d1 04       	cpc	r13, r1
 b58:	29 f0       	breq	.+10     	; 0xb64 <strtod+0x1c8>
 b5a:	cf 01       	movw	r24, r30
 b5c:	01 97       	sbiw	r24, 0x01	; 1
 b5e:	f6 01       	movw	r30, r12
 b60:	91 83       	std	Z+1, r25	; 0x01
 b62:	80 83       	st	Z, r24
 b64:	ca 01       	movw	r24, r20
 b66:	b9 01       	movw	r22, r18
 b68:	0e 94 42 06 	call	0xc84	; 0xc84 <__floatunsisf>
 b6c:	21 2f       	mov	r18, r17
 b6e:	23 70       	andi	r18, 0x03	; 3
 b70:	23 30       	cpi	r18, 0x03	; 3
 b72:	19 f0       	breq	.+6      	; 0xb7a <strtod+0x1de>
 b74:	4b 01       	movw	r8, r22
 b76:	5c 01       	movw	r10, r24
 b78:	06 c0       	rjmp	.+12     	; 0xb86 <strtod+0x1ea>
 b7a:	4b 01       	movw	r8, r22
 b7c:	5c 01       	movw	r10, r24
 b7e:	b7 fa       	bst	r11, 7
 b80:	b0 94       	com	r11
 b82:	b7 f8       	bld	r11, 7
 b84:	b0 94       	com	r11
 b86:	20 e0       	ldi	r18, 0x00	; 0
 b88:	30 e0       	ldi	r19, 0x00	; 0
 b8a:	a9 01       	movw	r20, r18
 b8c:	c5 01       	movw	r24, r10
 b8e:	b4 01       	movw	r22, r8
 b90:	0e 94 3d 06 	call	0xc7a	; 0xc7a <__cmpsf2>
 b94:	88 23       	and	r24, r24
 b96:	09 f4       	brne	.+2      	; 0xb9a <strtod+0x1fe>
 b98:	3e c0       	rjmp	.+124    	; 0xc16 <strtod+0x27a>
 b9a:	d7 ff       	sbrs	r29, 7
 b9c:	06 c0       	rjmp	.+12     	; 0xbaa <strtod+0x20e>
 b9e:	d1 95       	neg	r29
 ba0:	c1 95       	neg	r28
 ba2:	d1 09       	sbc	r29, r1
 ba4:	03 e7       	ldi	r16, 0x73	; 115
 ba6:	10 e0       	ldi	r17, 0x00	; 0
 ba8:	02 c0       	rjmp	.+4      	; 0xbae <strtod+0x212>
 baa:	0b e8       	ldi	r16, 0x8B	; 139
 bac:	10 e0       	ldi	r17, 0x00	; 0
 bae:	68 01       	movw	r12, r16
 bb0:	f8 e1       	ldi	r31, 0x18	; 24
 bb2:	cf 1a       	sub	r12, r31
 bb4:	d1 08       	sbc	r13, r1
 bb6:	90 e2       	ldi	r25, 0x20	; 32
 bb8:	e9 2e       	mov	r14, r25
 bba:	f1 2c       	mov	r15, r1
 bbc:	ce 15       	cp	r28, r14
 bbe:	df 05       	cpc	r29, r15
 bc0:	74 f0       	brlt	.+28     	; 0xbde <strtod+0x242>
 bc2:	f8 01       	movw	r30, r16
 bc4:	25 91       	lpm	r18, Z+
 bc6:	35 91       	lpm	r19, Z+
 bc8:	45 91       	lpm	r20, Z+
 bca:	54 91       	lpm	r21, Z
 bcc:	c5 01       	movw	r24, r10
 bce:	b4 01       	movw	r22, r8
 bd0:	0e 94 a3 06 	call	0xd46	; 0xd46 <__mulsf3>
 bd4:	4b 01       	movw	r8, r22
 bd6:	5c 01       	movw	r10, r24
 bd8:	ce 19       	sub	r28, r14
 bda:	df 09       	sbc	r29, r15
 bdc:	ef cf       	rjmp	.-34     	; 0xbbc <strtod+0x220>
 bde:	04 50       	subi	r16, 0x04	; 4
 be0:	11 09       	sbc	r17, r1
 be2:	f5 94       	asr	r15
 be4:	e7 94       	ror	r14
 be6:	0c 15       	cp	r16, r12
 be8:	1d 05       	cpc	r17, r13
 bea:	41 f7       	brne	.-48     	; 0xbbc <strtod+0x220>
 bec:	8a 2d       	mov	r24, r10
 bee:	88 0f       	add	r24, r24
 bf0:	8b 2d       	mov	r24, r11
 bf2:	88 1f       	adc	r24, r24
 bf4:	8f 3f       	cpi	r24, 0xFF	; 255
 bf6:	49 f0       	breq	.+18     	; 0xc0a <strtod+0x26e>
 bf8:	20 e0       	ldi	r18, 0x00	; 0
 bfa:	30 e0       	ldi	r19, 0x00	; 0
 bfc:	a9 01       	movw	r20, r18
 bfe:	c5 01       	movw	r24, r10
 c00:	b4 01       	movw	r22, r8
 c02:	0e 94 3d 06 	call	0xc7a	; 0xc7a <__cmpsf2>
 c06:	81 11       	cpse	r24, r1
 c08:	06 c0       	rjmp	.+12     	; 0xc16 <strtod+0x27a>
 c0a:	82 e2       	ldi	r24, 0x22	; 34
 c0c:	90 e0       	ldi	r25, 0x00	; 0
 c0e:	90 93 a7 00 	sts	0x00A7, r25	; 0x8000a7 <errno+0x1>
 c12:	80 93 a6 00 	sts	0x00A6, r24	; 0x8000a6 <errno>
 c16:	c5 01       	movw	r24, r10
 c18:	b4 01       	movw	r22, r8
 c1a:	09 c0       	rjmp	.+18     	; 0xc2e <strtod+0x292>
 c1c:	60 e0       	ldi	r22, 0x00	; 0
 c1e:	70 e0       	ldi	r23, 0x00	; 0
 c20:	80 e8       	ldi	r24, 0x80	; 128
 c22:	9f ef       	ldi	r25, 0xFF	; 255
 c24:	04 c0       	rjmp	.+8      	; 0xc2e <strtod+0x292>
 c26:	60 e0       	ldi	r22, 0x00	; 0
 c28:	70 e0       	ldi	r23, 0x00	; 0
 c2a:	80 ec       	ldi	r24, 0xC0	; 192
 c2c:	9f e7       	ldi	r25, 0x7F	; 127
 c2e:	cd b7       	in	r28, 0x3d	; 61
 c30:	de b7       	in	r29, 0x3e	; 62
 c32:	ec e0       	ldi	r30, 0x0C	; 12
 c34:	0c 94 54 07 	jmp	0xea8	; 0xea8 <__epilogue_restores__+0xc>

00000c38 <isspace>:
 c38:	91 11       	cpse	r25, r1
 c3a:	0c 94 10 07 	jmp	0xe20	; 0xe20 <__ctype_isfalse>
 c3e:	80 32       	cpi	r24, 0x20	; 32
 c40:	19 f0       	breq	.+6      	; 0xc48 <isspace+0x10>
 c42:	89 50       	subi	r24, 0x09	; 9
 c44:	85 50       	subi	r24, 0x05	; 5
 c46:	c8 f7       	brcc	.-14     	; 0xc3a <isspace+0x2>
 c48:	08 95       	ret

00000c4a <strncasecmp_P>:
 c4a:	fb 01       	movw	r30, r22
 c4c:	dc 01       	movw	r26, r24
 c4e:	41 50       	subi	r20, 0x01	; 1
 c50:	50 40       	sbci	r21, 0x00	; 0
 c52:	88 f0       	brcs	.+34     	; 0xc76 <strncasecmp_P+0x2c>
 c54:	8d 91       	ld	r24, X+
 c56:	81 34       	cpi	r24, 0x41	; 65
 c58:	1c f0       	brlt	.+6      	; 0xc60 <strncasecmp_P+0x16>
 c5a:	8b 35       	cpi	r24, 0x5B	; 91
 c5c:	0c f4       	brge	.+2      	; 0xc60 <strncasecmp_P+0x16>
 c5e:	80 5e       	subi	r24, 0xE0	; 224
 c60:	65 91       	lpm	r22, Z+
 c62:	61 34       	cpi	r22, 0x41	; 65
 c64:	1c f0       	brlt	.+6      	; 0xc6c <strncasecmp_P+0x22>
 c66:	6b 35       	cpi	r22, 0x5B	; 91
 c68:	0c f4       	brge	.+2      	; 0xc6c <strncasecmp_P+0x22>
 c6a:	60 5e       	subi	r22, 0xE0	; 224
 c6c:	86 1b       	sub	r24, r22
 c6e:	61 11       	cpse	r22, r1
 c70:	71 f3       	breq	.-36     	; 0xc4e <strncasecmp_P+0x4>
 c72:	99 0b       	sbc	r25, r25
 c74:	08 95       	ret
 c76:	88 1b       	sub	r24, r24
 c78:	fc cf       	rjmp	.-8      	; 0xc72 <strncasecmp_P+0x28>

00000c7a <__cmpsf2>:
 c7a:	0e 94 7f 06 	call	0xcfe	; 0xcfe <__fp_cmp>
 c7e:	08 f4       	brcc	.+2      	; 0xc82 <__cmpsf2+0x8>
 c80:	81 e0       	ldi	r24, 0x01	; 1
 c82:	08 95       	ret

00000c84 <__floatunsisf>:
 c84:	e8 94       	clt
 c86:	09 c0       	rjmp	.+18     	; 0xc9a <__floatsisf+0x12>

00000c88 <__floatsisf>:
 c88:	97 fb       	bst	r25, 7
 c8a:	3e f4       	brtc	.+14     	; 0xc9a <__floatsisf+0x12>
 c8c:	90 95       	com	r25
 c8e:	80 95       	com	r24
 c90:	70 95       	com	r23
 c92:	61 95       	neg	r22
 c94:	7f 4f       	sbci	r23, 0xFF	; 255
 c96:	8f 4f       	sbci	r24, 0xFF	; 255
 c98:	9f 4f       	sbci	r25, 0xFF	; 255
 c9a:	99 23       	and	r25, r25
 c9c:	a9 f0       	breq	.+42     	; 0xcc8 <__floatsisf+0x40>
 c9e:	f9 2f       	mov	r31, r25
 ca0:	96 e9       	ldi	r25, 0x96	; 150
 ca2:	bb 27       	eor	r27, r27
 ca4:	93 95       	inc	r25
 ca6:	f6 95       	lsr	r31
 ca8:	87 95       	ror	r24
 caa:	77 95       	ror	r23
 cac:	67 95       	ror	r22
 cae:	b7 95       	ror	r27
 cb0:	f1 11       	cpse	r31, r1
 cb2:	f8 cf       	rjmp	.-16     	; 0xca4 <__floatsisf+0x1c>
 cb4:	fa f4       	brpl	.+62     	; 0xcf4 <__floatsisf+0x6c>
 cb6:	bb 0f       	add	r27, r27
 cb8:	11 f4       	brne	.+4      	; 0xcbe <__floatsisf+0x36>
 cba:	60 ff       	sbrs	r22, 0
 cbc:	1b c0       	rjmp	.+54     	; 0xcf4 <__floatsisf+0x6c>
 cbe:	6f 5f       	subi	r22, 0xFF	; 255
 cc0:	7f 4f       	sbci	r23, 0xFF	; 255
 cc2:	8f 4f       	sbci	r24, 0xFF	; 255
 cc4:	9f 4f       	sbci	r25, 0xFF	; 255
 cc6:	16 c0       	rjmp	.+44     	; 0xcf4 <__floatsisf+0x6c>
 cc8:	88 23       	and	r24, r24
 cca:	11 f0       	breq	.+4      	; 0xcd0 <__floatsisf+0x48>
 ccc:	96 e9       	ldi	r25, 0x96	; 150
 cce:	11 c0       	rjmp	.+34     	; 0xcf2 <__floatsisf+0x6a>
 cd0:	77 23       	and	r23, r23
 cd2:	21 f0       	breq	.+8      	; 0xcdc <__floatsisf+0x54>
 cd4:	9e e8       	ldi	r25, 0x8E	; 142
 cd6:	87 2f       	mov	r24, r23
 cd8:	76 2f       	mov	r23, r22
 cda:	05 c0       	rjmp	.+10     	; 0xce6 <__floatsisf+0x5e>
 cdc:	66 23       	and	r22, r22
 cde:	71 f0       	breq	.+28     	; 0xcfc <__floatsisf+0x74>
 ce0:	96 e8       	ldi	r25, 0x86	; 134
 ce2:	86 2f       	mov	r24, r22
 ce4:	70 e0       	ldi	r23, 0x00	; 0
 ce6:	60 e0       	ldi	r22, 0x00	; 0
 ce8:	2a f0       	brmi	.+10     	; 0xcf4 <__floatsisf+0x6c>
 cea:	9a 95       	dec	r25
 cec:	66 0f       	add	r22, r22
 cee:	77 1f       	adc	r23, r23
 cf0:	88 1f       	adc	r24, r24
 cf2:	da f7       	brpl	.-10     	; 0xcea <__floatsisf+0x62>
 cf4:	88 0f       	add	r24, r24
 cf6:	96 95       	lsr	r25
 cf8:	87 95       	ror	r24
 cfa:	97 f9       	bld	r25, 7
 cfc:	08 95       	ret

00000cfe <__fp_cmp>:
 cfe:	99 0f       	add	r25, r25
 d00:	00 08       	sbc	r0, r0
 d02:	55 0f       	add	r21, r21
 d04:	aa 0b       	sbc	r26, r26
 d06:	e0 e8       	ldi	r30, 0x80	; 128
 d08:	fe ef       	ldi	r31, 0xFE	; 254
 d0a:	16 16       	cp	r1, r22
 d0c:	17 06       	cpc	r1, r23
 d0e:	e8 07       	cpc	r30, r24
 d10:	f9 07       	cpc	r31, r25
 d12:	c0 f0       	brcs	.+48     	; 0xd44 <__fp_cmp+0x46>
 d14:	12 16       	cp	r1, r18
 d16:	13 06       	cpc	r1, r19
 d18:	e4 07       	cpc	r30, r20
 d1a:	f5 07       	cpc	r31, r21
 d1c:	98 f0       	brcs	.+38     	; 0xd44 <__fp_cmp+0x46>
 d1e:	62 1b       	sub	r22, r18
 d20:	73 0b       	sbc	r23, r19
 d22:	84 0b       	sbc	r24, r20
 d24:	95 0b       	sbc	r25, r21
 d26:	39 f4       	brne	.+14     	; 0xd36 <__fp_cmp+0x38>
 d28:	0a 26       	eor	r0, r26
 d2a:	61 f0       	breq	.+24     	; 0xd44 <__fp_cmp+0x46>
 d2c:	23 2b       	or	r18, r19
 d2e:	24 2b       	or	r18, r20
 d30:	25 2b       	or	r18, r21
 d32:	21 f4       	brne	.+8      	; 0xd3c <__fp_cmp+0x3e>
 d34:	08 95       	ret
 d36:	0a 26       	eor	r0, r26
 d38:	09 f4       	brne	.+2      	; 0xd3c <__fp_cmp+0x3e>
 d3a:	a1 40       	sbci	r26, 0x01	; 1
 d3c:	a6 95       	lsr	r26
 d3e:	8f ef       	ldi	r24, 0xFF	; 255
 d40:	81 1d       	adc	r24, r1
 d42:	81 1d       	adc	r24, r1
 d44:	08 95       	ret

00000d46 <__mulsf3>:
 d46:	0e 94 b6 06 	call	0xd6c	; 0xd6c <__mulsf3x>
 d4a:	0c 94 ab 02 	jmp	0x556	; 0x556 <__fp_round>
 d4e:	0e 94 9d 02 	call	0x53a	; 0x53a <__fp_pscA>
 d52:	38 f0       	brcs	.+14     	; 0xd62 <__mulsf3+0x1c>
 d54:	0e 94 a4 02 	call	0x548	; 0x548 <__fp_pscB>
 d58:	20 f0       	brcs	.+8      	; 0xd62 <__mulsf3+0x1c>
 d5a:	95 23       	and	r25, r21
 d5c:	11 f0       	breq	.+4      	; 0xd62 <__mulsf3+0x1c>
 d5e:	0c 94 94 02 	jmp	0x528	; 0x528 <__fp_inf>
 d62:	0c 94 9a 02 	jmp	0x534	; 0x534 <__fp_nan>
 d66:	11 24       	eor	r1, r1
 d68:	0c 94 df 02 	jmp	0x5be	; 0x5be <__fp_szero>

00000d6c <__mulsf3x>:
 d6c:	0e 94 bc 02 	call	0x578	; 0x578 <__fp_split3>
 d70:	70 f3       	brcs	.-36     	; 0xd4e <__mulsf3+0x8>

00000d72 <__mulsf3_pse>:
 d72:	95 9f       	mul	r25, r21
 d74:	c1 f3       	breq	.-16     	; 0xd66 <__mulsf3+0x20>
 d76:	95 0f       	add	r25, r21
 d78:	50 e0       	ldi	r21, 0x00	; 0
 d7a:	55 1f       	adc	r21, r21
 d7c:	62 9f       	mul	r22, r18
 d7e:	f0 01       	movw	r30, r0
 d80:	72 9f       	mul	r23, r18
 d82:	bb 27       	eor	r27, r27
 d84:	f0 0d       	add	r31, r0
 d86:	b1 1d       	adc	r27, r1
 d88:	63 9f       	mul	r22, r19
 d8a:	aa 27       	eor	r26, r26
 d8c:	f0 0d       	add	r31, r0
 d8e:	b1 1d       	adc	r27, r1
 d90:	aa 1f       	adc	r26, r26
 d92:	64 9f       	mul	r22, r20
 d94:	66 27       	eor	r22, r22
 d96:	b0 0d       	add	r27, r0
 d98:	a1 1d       	adc	r26, r1
 d9a:	66 1f       	adc	r22, r22
 d9c:	82 9f       	mul	r24, r18
 d9e:	22 27       	eor	r18, r18
 da0:	b0 0d       	add	r27, r0
 da2:	a1 1d       	adc	r26, r1
 da4:	62 1f       	adc	r22, r18
 da6:	73 9f       	mul	r23, r19
 da8:	b0 0d       	add	r27, r0
 daa:	a1 1d       	adc	r26, r1
 dac:	62 1f       	adc	r22, r18
 dae:	83 9f       	mul	r24, r19
 db0:	a0 0d       	add	r26, r0
 db2:	61 1d       	adc	r22, r1
 db4:	22 1f       	adc	r18, r18
 db6:	74 9f       	mul	r23, r20
 db8:	33 27       	eor	r19, r19
 dba:	a0 0d       	add	r26, r0
 dbc:	61 1d       	adc	r22, r1
 dbe:	23 1f       	adc	r18, r19
 dc0:	84 9f       	mul	r24, r20
 dc2:	60 0d       	add	r22, r0
 dc4:	21 1d       	adc	r18, r1
 dc6:	82 2f       	mov	r24, r18
 dc8:	76 2f       	mov	r23, r22
 dca:	6a 2f       	mov	r22, r26
 dcc:	11 24       	eor	r1, r1
 dce:	9f 57       	subi	r25, 0x7F	; 127
 dd0:	50 40       	sbci	r21, 0x00	; 0
 dd2:	9a f0       	brmi	.+38     	; 0xdfa <__mulsf3_pse+0x88>
 dd4:	f1 f0       	breq	.+60     	; 0xe12 <__mulsf3_pse+0xa0>
 dd6:	88 23       	and	r24, r24
 dd8:	4a f0       	brmi	.+18     	; 0xdec <__mulsf3_pse+0x7a>
 dda:	ee 0f       	add	r30, r30
 ddc:	ff 1f       	adc	r31, r31
 dde:	bb 1f       	adc	r27, r27
 de0:	66 1f       	adc	r22, r22
 de2:	77 1f       	adc	r23, r23
 de4:	88 1f       	adc	r24, r24
 de6:	91 50       	subi	r25, 0x01	; 1
 de8:	50 40       	sbci	r21, 0x00	; 0
 dea:	a9 f7       	brne	.-22     	; 0xdd6 <__mulsf3_pse+0x64>
 dec:	9e 3f       	cpi	r25, 0xFE	; 254
 dee:	51 05       	cpc	r21, r1
 df0:	80 f0       	brcs	.+32     	; 0xe12 <__mulsf3_pse+0xa0>
 df2:	0c 94 94 02 	jmp	0x528	; 0x528 <__fp_inf>
 df6:	0c 94 df 02 	jmp	0x5be	; 0x5be <__fp_szero>
 dfa:	5f 3f       	cpi	r21, 0xFF	; 255
 dfc:	e4 f3       	brlt	.-8      	; 0xdf6 <__mulsf3_pse+0x84>
 dfe:	98 3e       	cpi	r25, 0xE8	; 232
 e00:	d4 f3       	brlt	.-12     	; 0xdf6 <__mulsf3_pse+0x84>
 e02:	86 95       	lsr	r24
 e04:	77 95       	ror	r23
 e06:	67 95       	ror	r22
 e08:	b7 95       	ror	r27
 e0a:	f7 95       	ror	r31
 e0c:	e7 95       	ror	r30
 e0e:	9f 5f       	subi	r25, 0xFF	; 255
 e10:	c1 f7       	brne	.-16     	; 0xe02 <__mulsf3_pse+0x90>
 e12:	fe 2b       	or	r31, r30
 e14:	88 0f       	add	r24, r24
 e16:	91 1d       	adc	r25, r1
 e18:	96 95       	lsr	r25
 e1a:	87 95       	ror	r24
 e1c:	97 f9       	bld	r25, 7
 e1e:	08 95       	ret

00000e20 <__ctype_isfalse>:
 e20:	99 27       	eor	r25, r25
 e22:	88 27       	eor	r24, r24

00000e24 <__ctype_istrue>:
 e24:	08 95       	ret

00000e26 <__udivmodhi4>:
 e26:	aa 1b       	sub	r26, r26
 e28:	bb 1b       	sub	r27, r27
 e2a:	51 e1       	ldi	r21, 0x11	; 17
 e2c:	07 c0       	rjmp	.+14     	; 0xe3c <__udivmodhi4_ep>

00000e2e <__udivmodhi4_loop>:
 e2e:	aa 1f       	adc	r26, r26
 e30:	bb 1f       	adc	r27, r27
 e32:	a6 17       	cp	r26, r22
 e34:	b7 07       	cpc	r27, r23
 e36:	10 f0       	brcs	.+4      	; 0xe3c <__udivmodhi4_ep>
 e38:	a6 1b       	sub	r26, r22
 e3a:	b7 0b       	sbc	r27, r23

00000e3c <__udivmodhi4_ep>:
 e3c:	88 1f       	adc	r24, r24
 e3e:	99 1f       	adc	r25, r25
 e40:	5a 95       	dec	r21
 e42:	a9 f7       	brne	.-22     	; 0xe2e <__udivmodhi4_loop>
 e44:	80 95       	com	r24
 e46:	90 95       	com	r25
 e48:	bc 01       	movw	r22, r24
 e4a:	cd 01       	movw	r24, r26
 e4c:	08 95       	ret

00000e4e <__muluhisi3>:
 e4e:	0e 94 69 07 	call	0xed2	; 0xed2 <__umulhisi3>
 e52:	a5 9f       	mul	r26, r21
 e54:	90 0d       	add	r25, r0
 e56:	b4 9f       	mul	r27, r20
 e58:	90 0d       	add	r25, r0
 e5a:	a4 9f       	mul	r26, r20
 e5c:	80 0d       	add	r24, r0
 e5e:	91 1d       	adc	r25, r1
 e60:	11 24       	eor	r1, r1
 e62:	08 95       	ret

00000e64 <__prologue_saves__>:
 e64:	2f 92       	push	r2
 e66:	3f 92       	push	r3
 e68:	4f 92       	push	r4
 e6a:	5f 92       	push	r5
 e6c:	6f 92       	push	r6
 e6e:	7f 92       	push	r7
 e70:	8f 92       	push	r8
 e72:	9f 92       	push	r9
 e74:	af 92       	push	r10
 e76:	bf 92       	push	r11
 e78:	cf 92       	push	r12
 e7a:	df 92       	push	r13
 e7c:	ef 92       	push	r14
 e7e:	ff 92       	push	r15
 e80:	0f 93       	push	r16
 e82:	1f 93       	push	r17
 e84:	cf 93       	push	r28
 e86:	df 93       	push	r29
 e88:	cd b7       	in	r28, 0x3d	; 61
 e8a:	de b7       	in	r29, 0x3e	; 62
 e8c:	ca 1b       	sub	r28, r26
 e8e:	db 0b       	sbc	r29, r27
 e90:	0f b6       	in	r0, 0x3f	; 63
 e92:	f8 94       	cli
 e94:	de bf       	out	0x3e, r29	; 62
 e96:	0f be       	out	0x3f, r0	; 63
 e98:	cd bf       	out	0x3d, r28	; 61
 e9a:	09 94       	ijmp

00000e9c <__epilogue_restores__>:
 e9c:	2a 88       	ldd	r2, Y+18	; 0x12
 e9e:	39 88       	ldd	r3, Y+17	; 0x11
 ea0:	48 88       	ldd	r4, Y+16	; 0x10
 ea2:	5f 84       	ldd	r5, Y+15	; 0x0f
 ea4:	6e 84       	ldd	r6, Y+14	; 0x0e
 ea6:	7d 84       	ldd	r7, Y+13	; 0x0d
 ea8:	8c 84       	ldd	r8, Y+12	; 0x0c
 eaa:	9b 84       	ldd	r9, Y+11	; 0x0b
 eac:	aa 84       	ldd	r10, Y+10	; 0x0a
 eae:	b9 84       	ldd	r11, Y+9	; 0x09
 eb0:	c8 84       	ldd	r12, Y+8	; 0x08
 eb2:	df 80       	ldd	r13, Y+7	; 0x07
 eb4:	ee 80       	ldd	r14, Y+6	; 0x06
 eb6:	fd 80       	ldd	r15, Y+5	; 0x05
 eb8:	0c 81       	ldd	r16, Y+4	; 0x04
 eba:	1b 81       	ldd	r17, Y+3	; 0x03
 ebc:	aa 81       	ldd	r26, Y+2	; 0x02
 ebe:	b9 81       	ldd	r27, Y+1	; 0x01
 ec0:	ce 0f       	add	r28, r30
 ec2:	d1 1d       	adc	r29, r1
 ec4:	0f b6       	in	r0, 0x3f	; 63
 ec6:	f8 94       	cli
 ec8:	de bf       	out	0x3e, r29	; 62
 eca:	0f be       	out	0x3f, r0	; 63
 ecc:	cd bf       	out	0x3d, r28	; 61
 ece:	ed 01       	movw	r28, r26
 ed0:	08 95       	ret

00000ed2 <__umulhisi3>:
 ed2:	a2 9f       	mul	r26, r18
 ed4:	b0 01       	movw	r22, r0
 ed6:	b3 9f       	mul	r27, r19
 ed8:	c0 01       	movw	r24, r0
 eda:	a3 9f       	mul	r26, r19
 edc:	70 0d       	add	r23, r0
 ede:	81 1d       	adc	r24, r1
 ee0:	11 24       	eor	r1, r1
 ee2:	91 1d       	adc	r25, r1
 ee4:	b2 9f       	mul	r27, r18
 ee6:	70 0d       	add	r23, r0
 ee8:	81 1d       	adc	r24, r1
 eea:	11 24       	eor	r1, r1
 eec:	91 1d       	adc	r25, r1
 eee:	08 95       	ret

00000ef0 <_exit>:
 ef0:	f8 94       	cli

00000ef2 <__stop_program>:
 ef2:	ff cf       	rjmp	.-2      	; 0xef2 <__stop_program>
